<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en"><head><script type="text/javascript" async="" src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/ga.js"></script><script src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/analytics.js" type="text/javascript"></script>
<script type="text/javascript">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app211.us.archive.org';v.server_ms=308;archive_analytics.send_pageview({});});</script>
<script type="text/javascript" src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/bundle-playback.js" charset="utf-8"></script>
<script type="text/javascript" src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/wombat.js" charset="utf-8"></script>
<script>window.RufflePlayer=window.RufflePlayer||{};window.RufflePlayer.config={"autoplay":"on","unmuteOverlay":"hidden"};</script>
<script type="text/javascript" src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/ruffle.js"></script>
<script type="text/javascript">
    __wm.pc(0.001);
    __wm.init("https://web.archive.org/web");
  __wm.wombat("http://nobunkum.ru:80/ru/static-analysis","20180310125449","https://web.archive.org/","web","https://web-static.archive.org/_static/",
	      "1520686489");
</script>
<link rel="stylesheet" type="text/css" href="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/banner-styles.css">
<link rel="stylesheet" type="text/css" href="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/iconochive.css">
<!-- End Wayback Rewrite JS Include -->

  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>Некоторые приёмы статического анализа кода из арсенала вирусного аналитика</title>
  <!-- base href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/" -->
  <link rel="alternate" type="application/rss+xml" title="Журнал NO BUNKUM — Новости" href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/rss">
  <link rel="stylesheet" type="text/css" href="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/style.css">
<!--[if lt IE 8]>
<link rel="stylesheet" type="text/css" href="/template/css/ie.css" />
<![endif]-->
<!--[if IE 6]>
<link rel="stylesheet" type="text/css" href="/template/css/ie6.css" />
<![endif]-->
</head>
<body><!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script>__wm.rw(0);</script>
<div id="wm-ipp-base" lang="en" style="display: block; direction: ltr;">
</div><div id="wm-ipp-print">The Wayback Machine - https://web.archive.org/web/20180310125449/http://nobunkum.ru:80/ru/static-analysis</div>
<script type="text/javascript">//<![CDATA[
__wm.bt(725,27,25,2,"web","http://nobunkum.ru/ru/static-analysis","20180310125449",1996,"https://web-static.archive.org/_static/",["https://web-static.archive.org/_static/css/banner-styles.css?v=S1zqJCYt","https://web-static.archive.org/_static/css/iconochive.css?v=qtvMKcIJ"], false);
  __wm.rw(1);
//]]></script>
<!-- END WAYBACK TOOLBAR INSERT -->
 
      <div class="subscribe">
        
<form action="/web/20180310125449/http://nobunkum.ru/ru/static-analysis" method="post">
<div>
<input class="mail" type="text" name="email" placeholder="newsletter">
<input type="hidden" name="groups[]" value="1">
<input class="submit" type="submit" value="OK"></div>
</form>
      </div>
  <div id="header">
    <div id="title">
      <a id="logo" href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/logo.jpg" width="374" height="51" alt="NO BUNKUM"></a>
      <p>...on guns, germs, and steel of the digital age</p>
    </div>
    <div id="subtitle">
      <ul><li class="first"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/lookout/" title="Lookout" class="issue">Lookout</a></li>
<li><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/analytics/" title="Analytics" class="issue">Analytics</a></li>
<li class="current"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/ru/" title="NO BUNKUM" class="issue">NO BUNKUM</a></li>
<li class="last"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/demo/" title="Demo" class="issue">Demo</a></li>
</ul>
      <div class="headerlinks">
        <a id="headerlink-about" href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/about" title="О журнале"><span>?</span></a>
        <a id="headerlink-rss" href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/rss" title="RSS"><span>RSS</span></a>
      </div>
    </div>
  </div>
  <div id="content">
    <div class="aside-long" style="text-align:center;padding:15px 10px">
      <span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=Exploit.SWF.Agent.br">Exploit.SWF.Agent.br</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=Pdfka.asd">Pdfka.asd</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=Pidief.cvl">Pidief.cvl</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight2"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=TDSS">TDSS</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=TDSS+removal">TDSS removal</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=binary+planting">binary planting</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=bios+infection">bios infection</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=blind+sqli">blind sqli</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=bootkit">bootkit</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=bootkit+remover">bootkit remover</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=browser+exploitation">browser exploitation</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=com+hijacking">com hijacking</a></span>
<span class="tl-tag tl-tag-weight4"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=disassembling">disassembling</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=dll+hijacking">dll hijacking</a></span>
<span class="tl-tag tl-tag-weight2"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=drive-by+downloads">drive-by downloads</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=hack+online+banks">hack online banks</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=heap-spray">heap-spray</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=hijack+botnet">hijack botnet</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=ibank">ibank</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=kernel+protection">kernel protection</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=kernel-mode+rootkit">kernel-mode rootkit</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=keylogger">keylogger</a></span>
<span class="tl-tag tl-tag-weight5"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=malware+analysis">malware analysis</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight2"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=rootkit+detection">rootkit detection</a></span>
<span class="tl-tag tl-tag-weight3"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=trojan">trojan</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/tags?tag=virus+removal">virus removal</a></span>
    </div>
    <div style="margin-top: -10px;">﻿
<h1>Некоторые приёмы статического анализа кода из арсенала вирусного аналитика</h1>
<p class="author">Дмитрий Андриянков<br>разработчик ЗАО «АСТ»<br><a href="https://web.archive.org/web/20180310125449/mailto:andriyankovdn@acti.ru">andriyankovdn@acti.ru</a></p>

<ul class="toc">
  <li><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/ru/static-analysis#s1">Приёмы навигации по коду</a></li>
  <li><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/ru/static-analysis#s2">Расшифровка данных</a></li>
  <li><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/ru/static-analysis#s3">Восстановление обнулённых дескрипторов секций</a></li>
  <li><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/ru/static-analysis#s4">Статическая распаковка файла</a></li>
  <li><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/ru/static-analysis#s5">Обнаружение вредоносных программ</a></li>
</ul>

<p>Вирусному аналитику нередко приходится сталкиваться с полиморфными 
объектами — исполнимыми файлами, упакованными средствами защиты программ
 от ручного или автоматизированного анализа. Данная статья описывает ряд
 приёмов работы с такими объектами при помощи редактора Hiew (Hacker's 
View). Статья ориентирована на начинающих специалистов, в задачи которых
 входит анализ исполнимых файлов в форматах PE или ELF, и предполагает 
знакомство с архитектурой x86 и ассемблером Intel.</p>

<div class="aside">
<h3>Приложение к статье</h3>
<p><a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/files/static-analysis/nb3-static-analysis.rar">Загрузить архив</a> (390 кБ)</p>
<p>Пароль к архиву: <code>nobunkum.ru</code></p>
<h3>Hiew</h3>
<p><a href="https://web.archive.org/web/20180310125449/http://allsoft.ru/program_page.php?grp=85462">Загрузить/купить</a></p>
</div>

<h2 id="s1">Приёмы навигации по коду</h2>

<p>Анализ кода в полиморфных объектах обычно затруднён большим 
количеством инструкций, передающих управление на другие участки кода. 
Зачастую «ненужные» инструкции запутывают код настолько, что понять его 
логику можно, только разработав специальный анализатор кода. В задачи 
такого анализатора может входить выяснение размера и смещения 
зашифрованных данных,  поиск ключа для их расшифровки, определение 
адреса перехода на изначальную точку входа и другие функции.</p>

<p>Типичный вопрос, встающий перед разработчиком анализатора кода, — 
«Поддержку каких инструкций необходимо добавить?» Можно выяснить это с 
помощью дизассемблера IDA Pro, но запускать такое мощное средство 
анализа кода только, чтобы увидеть одну-две инструкции, было бы 
нерациональным. Куда быстрее ту же задачу можно решить с помощью Hiew.</p>

<div class="aside-long">
<h3>Совет от разработчика Hiew</h3>
<div class="author">Евгений Сусликов<br><a href="https://web.archive.org/web/20180310125449/mailto:sen@kemtel.ru">sen@kemtel.ru</a></div>

<p>Некоторое время назад я прочитал статью «<a href="https://web.archive.org/web/20180310125449/http://habrahabr.ru/blogs/asm/89763/">Коварный и ужасный sndrec32.exe</a>».
 По моему мнению, вместо описанного там применения четырёх различных 
инструментов достаточно одного Hiew. Вся правка «коварного и ужасного» 
сводится к следующему:</p>

<p>1. Найти функцию определения количества свободных байт в оперативной 
памяти. Автор статьи умолчал, каким образом он пришел именно к <code>GlobalMemoryStatus</code>, но с помощью Hiew это можно сделать так:</p>

<p>F4, F3 — переключение в режим дизассемблера.<br>F8, F7 — просмотр функций импорта.<br>F9, <code>*memory*</code> — поиск имён по маске.</p>

<p>Последний шаг делается в предположении, что искомая функция будет 
содержать слово «memory» в имени. Оказывается, всего одна импортируемая 
функция соответствует такому фильтру — <code>GlobalMemoryStatus</code>.</p>

<p>2. Найти вызовы данной функции в коде. Для этого достаточно нажать 
Enter. Ctrl-Enter позволяет найти следующий вызов. На интересные 
фрагменты кода можно сделать закладки с помощью клавиши + на цифровой 
клавиатуре. В нашем случае второй и третий вызовы по адресам .10077AC и 
.100789A почти идентичны.</p>

<p>3. Исправить код. Клавишами Alt-1 вернёмся к первой закладке, прочтём код и примем решение заменить знаковый переход <code>jle</code> на беззнаковый <code>jbe</code> по адресу .10077D5. В строке по этому адресу нажмём F3 для редактирования и F2 для ввода ассемблерного кода, затем вместо «<code>jle</code>» введём «<code>jbe</code>» и нажмём Enter. После этого нажатием Esc выйдем из ассемблера и сохраним изменения клавишей F9.</p>

<p>Заметим, что автор оригинальной статьи не упомянул о коде на адресе 
.100789A. Перейдя на вторую закладку клавишами Alt-2, обнаружим там 
аналогичную ошибку и исправим её.</p>

</div>


<p>Многие вирусные аналитики назначают Hiew в качестве альтернативного 
средства просмотра (Alt-F3) в настройках менеджера файлов. Автор статьи 
рекомендует сэкономить ещё один шаг и добавить к команде запуска Hiew 
параметр <code>/Oc=OEP</code>, чтобы просмотр исполнимых файлов всегда начинался с точки входа. Если же задать в файле <code>hiew8.ini</code> настройку <code>StartMode = Hex</code>, то режимом просмотра по умолчанию станет шестнадцатеричный.</p>

<p>К точке входа можно перейти в любой момент, нажав последовательно F8 и F5.</p>

<p>Удобная возможность Hiew — следовать по смещениям, указанным в инструкциях передачи управления, например, <code>call</code> или <code>jmp</code>.
 Справа от каждой такой инструкции редактор показывает цифру, нажав 
которую на клавиатуре, можно перейти по указанному в инструкции 
смещению. Вернуться назад после такого перехода можно, нажав клавишу 0. 
(Автор находит более удобным использовать для этой цели клавишу z, для 
чего в файле <code>hiew8.ini</code> следует задать настройку <code>JumpTable = "z123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</code>).</p>

<p>Иногда оказывается полезной возможность перенастройки шкалы смещений 
Hiew путём сопоставления её нулевой точки с адресом произвольной 
инструкции. Для этого необходимо, установив указатель на нужный адрес, 
дважды нажать Ctrl-F5. При этом новая настройка шкалы сохраняется в виде
 соответствующей записи в окне, отображаемом при однократном нажатии 
Ctrl-F5, и может быть использована повторно. Перенастройка шкалы может 
быть полезна для оценки размера зашифрованных данных, а также для 
повышения наглядности адресов переходов типа <code>call</code> и <code>jmp</code>, отсчитываемых в режиме адресации Local (Alt-F1) от «нуля» шкалы.</p>

<h2 id="s2">Расшифровка данных</h2>

<p>Несложные скрипты для расшифровки данных можно разрабатывать и 
применять непосредственно в Hiew, экономя время на запуск отладчика.</p>

<p>Разберём для примера известный <a href="https://web.archive.org/web/20180310125449/http://www.cracklab.ru/f/index.php?action=vthread&amp;forum=1&amp;topic=4732">crackme/keygenme от Ms-Rem</a>, в котором проверка производится байт-кодом в виртуальной машине. Рассмотрим начало байт-кода программы:</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/pcode_packed.jpg" width="656" height="271" alt="Байт-код"><p>Байт-код</p></div>

<p>Код функции, декодирующей очередную инструкцию виртуальной машины, выглядит так:</p>

<pre>.00401284: 8A0C18       mov     cl,[eax][ebx]
.00401287: 88CD         mov     ch,cl
.00401289: C0ED04       shr     ch,4
.0040128C: 30E9         xor     cl,ch
.0040128E: 80E107       and     cl,7
.00401291: C3           retn    ; -^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-</pre>

<p>Чтобы расшифровать данные с помощью Hiew, следует прежде всего 
выделить 
блок зашифрованных данных клавишей * и нажать Alt-F3 (CryBlk). Затем в 
окне редактирования кода напишем 
код расшифровки, аналогичный вышеприведённому. Hiew поддерживает 
выполнение ограниченного набора инструкций, список которых приведён в 
разделе «Crypt commands» справочного файла. С учётом ограничений код 
будет выглядеть так:</p>

<pre>mov     ah,al
ror     ah,4
and     ah,0fh
xor     al,ah
and     al,7</pre>

<p>Нажав F7 после редактирования кода, получим расшифрованные данные.</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/pcode_unpacked.jpg" width="657" height="271" alt="Расшифрованный байт-код"><p>Расшифрованный байт-код</p></div>

<p>При необходимости сохранить скрипт расшифровки в файл можно вернуться в редактор нажатием Alt-F3, после чего нажать F9.</p>

<p>Нередко возникает необходимость в расшифровке данных, зашифрованных 
по алгоритму XOR с длинным ключом. В таком случае можно воспользоваться 
встроенной возможностью Hiew по расшифровке: перейти в режим правки 
клавишей F3 в режимах Code или Hex, нажать F8 и задать ключ шифрования. 
Установить новый ключ можно клавишами Ctrl-F8.</p>

<h2 id="s3">Восстановление обнулённых дескрипторов секций</h2>

<p>Для затруднения распаковки многие упаковщики обнуляют области памяти 
модуля, в которых находится дескрипторы секций. Каждый дескриптор 
описывается структурой <code>IMAGE_SECTION_HEADER</code>.</p>

<p>В этом случае можно взять дескрипторы секций из оригинального файла, 
установив в них смещения, равные виртуальным адресам секций. Смещения 
должны быть выравнены на величину <code>SectionAlignment</code>, указанную в заголовке образа.</p>

<p>Возьмем вредоносную программу, упакованную таким полиморфным упаковщиком, и увидим после снятия дампа следующее:</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/objects_cleaned.jpg" width="657" height="339" alt="Обнулённые дескрипторы секций"><p>Обнулённые дескрипторы секций</p></div>

<p>Чтобы восстановить дескрипторы секций, прежде всего скопируем их из 
оригинального, упакованного файла. Для этого откроем этот файл, выделим 
начало и конец области дескрипторов клавишей *, а затем запишем 
выделенные байты в файл с дампом памяти, нажав F2 и указав имя файла и 
смещение (1e8). </p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/objects_original.jpg" width="657" height="339" alt="Выделенные дескрипторы в оригинальном файле"><p>Выделенные дескрипторы в оригинальном файле</p></div>

<p>Затем, открыв файл с дампом, исправим смещения, указанные в 
дескрипторах (F8, F6). Нажатие F3 позволяет начать редактирование 
выбранного дескриптора, а F9 — принять сделанные изменения.</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/object_editor.jpg" width="658" height="294" alt="Редактирование дескриптора секции"><p>Редактирование дескриптора секции</p></div>

<p></p><h2 id="unpack"><a name="s4" style="text-decoration: none;color: inherit;">Статическая распаковка файла</a></h2>

<p>Несмотря на то, что снятие дампа с помощью отладчика обычно быстрее, в
 некоторых случаях это по тем или иным причинам невозможно, и приходится
 прибегать к статической распаковке. Часть задач в рамках статической 
распаковки также можно осуществить, не выходя из Hiew.</p>

<p>Для примера рассмотрим образец <code>test.bin</code> из приложения к 
статье. Он упакован простейшим полиморфным упаковщиком, предназначенным 
для сокрытия вредоносного кода от обнаружения.</p>

<p>Открыв файл для анализа в Hiew и пройдя несколько переходов, мы 
увидим характерный код для доступа к данным, расшифровки и перехода на 
OEP:</p>

<pre>; Получение адреса зашифрованных данных:
.10007012:  60              pushad
.1000703F:  E829000000      call        .01000706D --↓1
.1000706D:  5E              pop         esi
.10007098:  81C670FFFFFF    add         esi,0FFFFFF70 ;'&nbsp;&nbsp;&nbsp;p'

; Расшифровка:
.10007117:  8B16            mov         edx,[esi]
.10007145:  03D6            add         edx,esi
.10007168:  8B4604          mov         eax,[esi][4]
.1000718C:  812ADEEC02E9    sub         d,[edx],0E902ECDE ;'щ☻ь▐'
.100071AD:  83C204          add         edx,4
.100071E0:  83E801          sub         eax,1
.1000721C:  83C608          add         esi,8
.100070A5:  833E00          cmp         d,[esi],0
.100070C1:  0F84C7010000    jz          .01000728E --↓1

; Переход на OEP:
.100072BC:  61              popad
.100072BE:  EB02            jmps        .0100072C2 --↓1
.100072C2:   E998B7FFFF     jmp         .010002A5F --↑1</pre>

<p>Для распаковки достаточно сложить адрес следующей инструкции после <code>call</code> (10007044) и значение в инструкции <code>add</code>
 (0FFFFFF70). Сложение можно выполнить непосредственно в Hiew, нажав 
Alt-=. Зашифрованные данные, находящиеся по вычисленному адресу, удобнее
 всего представить как массив двойных слов (DWORD). Для этого следует 
нажать Shift-F9 и при необходимости выбрать режим показа двойных слов 
клавишей Tab.</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/dword_list.jpg" width="643" height="258" alt="Массив двойных слов"><p>Массив двойных слов</p></div>

<p>Нетрудно видеть, что для распаковки первого объекта нужно вычислить 
его адрес (для этого сложим смещение 10006FB8 с величиной FFFFA048), 
запомнить размер объекта (17ED) и применить ключ расшифровки 
(0E902ECDE).</p>

<p>Заметим, что, если в массиве двойных слов окажется значение, похожее на <abbr title="Relative Virtual Address">RVA</abbr>, перейти по нему можно клавишей Enter.</p>

<h2 id="s5">Обнаружение вредоносных программ</h2>

<p>Чтобы разработать метод обнаружения вредоносного кода по сигнатуре, нужно найти в нём пригодные для этого уникальные черты.</p>

<p>В начале файлов <code>tukuhegu.dll</code> и <code>welolazu.dll</code> (см. приложение к статье) можно увидеть такие участки:</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/krap_o_1.jpg" width="656" height="115" alt="Переход посредством установки SEH-обработчика"><p>Переход посредством установки SEH-обработчика</p></div>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/krap_o_2.jpg" width="655" height="176" alt="Установка перехвата с помощью инструкции jmp"><p>Установка перехвата с помощью инструкции <code>jmp</code></p></div>

<p>Первый признак, пригодный для обнаружения, заключается в использования <abbr title="Structured Exception Handling">SEH</abbr>-
обработчика с последующей его активацией путём сознательного вызова 
исключения. Это «трюк», практически никогда не встречающийся в 
легитимных программах. Во втором случае происходит запись значения 1DA79
 по адресу 1001ED17+1. Затем — запись в память опкода инструкции <code>jmp</code>
 и смещения 1001ED17, что является типичным признаком процедуры 
перехвата функций. При наличии столь подозрительных инструкций не 
требуется понимания того, как именно работает код и что хранится по 
указанным смещениям: найденные инструкции могут быть использованы в 
качестве сигнатур для обнаружения данной программы антивирусом. С целью 
предварительной фильтрации файлов и уменьшения числа ложных срабатываний
 антивирус обычно выполняет дешёвые предварительные проверки перед 
поиском сигнатур, например, проверку на наличие у секции кода атрибута 
«writeable».</p>

<p>Возьмем еще один пример, на котором можно увидеть ошибки генератора кода в полиморфном движке. Для этого откроем в Hiew образец <code>A0330534.bin</code>:</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/smiscer_ab_1.jpg" width="656" height="201" alt="Бессмысленная конструкция"><p>Бессмысленная конструкция</p></div>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/smiscer_ab_2.jpg" width="655" height="124" alt="Ещё одна бессмысленная конструкция"><p>Ещё одна бессмысленная конструкция</p></div>

<p>Ни один современный компилятор не создаст кода, который после записи 
значения в локальную переменную немедленно заменяет это значение новым. 
Такие участки кода обычно являются признаками, пригодными для 
эвристического обнаружения полиморфных генераторов.</p>

<p>Рассмотрим более сложный случай: модуль трояна «Зевс» (файл <code>zeus_hz0132.bin</code>
 в приложении), полученный автором статьи по ссылке из спама. Образец 
интересен тем, что код распаковщика занимает всего 136 байт.</p>

<div class="figure"><img src="%D0%9D%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5%20%D0%BF%D1%80%D0%B8%D1%91%D0%BC%D1%8B%20%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%20%D0%BA%D0%BE%D0%B4%D0%B0%20%D0%B8%D0%B7%20%D0%B0%D1%80%D1%81%D0%B5%D0%BD%D0%B0%D0%BB%D0%B0%20%D0%B2%D0%B8%D1%80%D1%83%D1%81%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_files/krap_ah.jpg" width="492" height="544" alt="Распаковщик «Зевса»"><p>Распаковщик «Зевса»</p></div>

<p>Сразу после открытия файла в Hiew бросается в глаза переход на третью инструкцию с помощью инструкций <code>push</code> и <code>ret</code>,
 нехарактерный для современных компиляторов. Ещё одной особенностью 
является то, что код не использует результаты после вызовов <code>GetCommandLineW</code> и <code>GetOEMCP</code>. Начиная с инструкции <code>lodsd</code>,
 можно видеть цикл расшифровки и ключи шифрования. Просматривая код 
далее, заметим переход назад с достаточно большим смещением в участок 
расшифрованного кода, который, очевидно, является переходом на OEP. На 
этом анализ завершён, и можно быстро написать статический распаковщик.

</p><p class="author" style="padding-left: 0px;">Last updated: 17.03.2012</p>

</div>
  ﻿</div>
  <div id="footer">
    <p class="copyright">© 2009–2012 <a href="https://web.archive.org/web/20180310125449/http://www.nobunkum.ru/">NOBUNKUM</a> by <a href="https://web.archive.org/web/20180310125449/http://www.esagelab.ru/">Esage Lab</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/ru/">/на русском языке</a> <a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/about">/about</a> <a href="https://web.archive.org/web/20180310125449/http://nobunkum.ru/rss">/rss</a></p>
  </div>
  <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-3546318-9']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://web.archive.org/web/20180310125449/https://ssl' : 'https://web.archive.org/web/20180310125449/http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


</body></html>
<!--
     FILE ARCHIVED ON 12:54:49 Mar 10, 2018 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:21:14 May 30, 2024.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
<!--
playback timings (ms):
  captures_list: 0.651
  exclusion.robots: 0.193
  exclusion.robots.policy: 0.183
  esindex: 0.009
  cdx.remote: 8.194
  LoadShardBlock: 147.952 (3)
  PetaboxLoader3.datanode: 86.443 (4)
  PetaboxLoader3.resolve: 166.235 (2)
  load_resource: 127.373
-->